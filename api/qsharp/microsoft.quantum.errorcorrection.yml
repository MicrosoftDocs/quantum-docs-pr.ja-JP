### YamlMime:QSharpNamespace
functions:
- summary: ⟦3、1、1⟧ビットフリップコードエンコーダー、および埋め込み先より隣人測定値を持つデコーダーを表す QECC 値を返します。
  uid: Microsoft.Quantum.ErrorCorrection.BitFlipCode
- summary: ⟦ 3, 1, 1 ⟧ビットフリップコードのテーブル参照によって指定されたより隣人測定の復旧 p 操作のための関数です。
  uid: Microsoft.Quantum.ErrorCorrection.BitFlipRecoveryFn
- summary: ⟦5、1、3⟧のコードエンコーダーを表す QECC 値と、インプレースより隣人測定値を返します。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCode
- summary: ⟦5、1、3⟧量子コードのテーブル参照によって、エラーより隣人の測定値を適切なエラー修正の値にマップする関数を返します。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeRecoveryFn
- summary: ⟦7、1、3⟧ Steane code encoder およびデコーダーを、インプレースより隣人測定値と共に表す CSS 値を返します。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCode
- summary: ⟦7、1、3⟧ Steane 量子コードの安定板グループの X 部と Z 部を組み合わせたデコーダーです。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryFns
- summary: ⟦7、1、3⟧ Steane 量子コードの安定板グループの X 部分のデコーダー。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryX
- summary: ⟦7、1、3⟧ Steane 量子コードの安定板グループの Z パートのデコーダー。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryZ
- summary: 指定された qubits のレジスタに対する P# li 操作の特定のテーブルに対して、この関数は、型のオブジェクトを返します。このオブジェクトには、 `RecoveryFn` 指定された Pan li 操作の配列に対してテーブル参照のデコードを実行するために必要なすべての情報が含まれています。
  uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecovery
- summary: ''
  uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecoveryImpl
name: Microsoft.Quantum.ErrorCorrection
newtypes:
- summary: エンコーダー、デコーダー、およびおよびエラーのより隣人の測定手順によって定義される Calderbank – Shor – Steane (CSS) コードを `X` `Z` それぞれ表します。
  uid: Microsoft.Quantum.ErrorCorrection.CSS
- summary: >-
    エンコードされたレジスタを物理レジスタにデコードし、より隣人を記録するために使用するスクラッチのビットをデコードする操作を表します。

    DecodeOp の引数は、EncodeOp からの戻り値と同じです。また、その逆も同様です。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeOp
- summary: >-
    指定されたスクラッチを使用して、物理レジスタを論理レジスタにエンコードする操作を表します。

    最初の引数はエンコードされる物理レジスタとして取得され、2番目の引数は使用されるスクラッチレジスタとして使用されます。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeOp
- summary: 論理 qubits をエンコードする物理 qubits のレジスタの場合は、「」と入力 `Qubit[]` します。
  uid: Microsoft.Quantum.ErrorCorrection.LogicalRegister
- summary: エンコーダー、デコーダー、およびより隣人測定手順によって定義された、エラー修正コードを表します。
  uid: Microsoft.Quantum.ErrorCorrection.QECC
- summary: エラーより隣人を、検出されたエラーを修正する一連の操作にマップする関数の型 `Pauli[]` 。
  uid: Microsoft.Quantum.ErrorCorrection.RecoveryFn
- summary: '`Result[]`クォンタムコードのエラーより隣人を指定する測定結果の型。'
  uid: Microsoft.Quantum.ErrorCorrection.Syndrome
- summary: エラー修正コードブロックのより隣人を測定するために使用される操作を表します。
  uid: Microsoft.Quantum.ErrorCorrection.SyndromeMeasOp
operations:
- summary: >-
    ビットフリップエンコーダーとデコーダーの両方を実装するために使用されるプライベート操作。

    このエンコーダーは、インプレース整合性復旧を利用できることに注意してください。この場合、の初期状態で記述されたエラーが "発生" し `auxQubits` ます。 特に、 `auxQubits` が最初に状態が $ \ket $ の場合、これにより、エンコードされ {10} た qubit で $X _1 $ error が発生します。
  uid: Microsoft.Quantum.ErrorCorrection.ApplyBitFlipEncoder
- summary: '[3, 1, 3]/⟦ 3, 1, 1 ⟧ビットフリップコードからデコードします。'
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromBitFlipCode
- summary: ⟦ 5, 1, 3 ⟧クォンタムコードをデコードします。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromFiveQubitCode
- summary: エンコードされていないクォンタムレジスタを⟦7、1、3⟧ Steane 量子コードでエンコードされたクォンタムレジスタにマップする逆エンコード操作。
  uid: Microsoft.Quantum.ErrorCorrection.DecodeFromSteaneCode
- summary: '[3, 1, 3]/⟦ 3, 1, 1 ⟧ビットフリップコードにエンコードされます。'
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoBitFlipCode
- summary: ⟦ 5, 1, 3 ⟧クォンタムコードにエンコードします。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoFiveQubitCode
- summary: エンコードされていないクォンタムレジスタを⟦7、1、3⟧ Steane 量子コードでエンコードされたクォンタムレジスタにマップするエンコーディング操作。
  uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoSteaneCode
- summary: 5 qubit エンコーダーとデコーダーの両方を実装するために使用されるプライベート操作。
  uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeEncoderImpl
- summary: Y 軸について1つの qubit をπ/4 で回転します。
  uid: Microsoft.Quantum.ErrorCorrection.InjectPi4YRotation
- summary: Knill マジック state 取り組みアルゴリズムを実装します。
  uid: Microsoft.Quantum.ErrorCorrection.KnillDistill
- summary: 安定板グループの特定のジェネレーターセットを測定します。
  uid: Microsoft.Quantum.ErrorCorrection.MeasureStabilizerGenerators
- summary: 型によって記述されたクォンタムコードによって、1回のエラー修正を実行し `QECC` ます。
  uid: Microsoft.Quantum.ErrorCorrection.Recover
- summary: 型によって記述されたクォンタムコードによって、1回のエラー修正を実行し `CSS` ます。
  uid: Microsoft.Quantum.ErrorCorrection.RecoverCSS
- summary: Steane コードエンコーダーとデコーダーの両方を実装するために使用されるプライベート操作。
  uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeEncoderImpl
- summary: >-
    より隣人の測定値と埋め込みの逆関数。

    $X $-と $Z $-stabilizers は、エンコーディング回線の特定の選択によって処理されません。 この asymmetry は、別のより隣人抽出ルーチンにつながります。 より隣人を測定する方法としては、コードの状態を直接測定する方法がありますが、取り組みの目的では、論理 qubit が1つの qubit に返されます。これは、より隣人の測定値をさらに ancillas なしで実行できることです。
  uid: Microsoft.Quantum.ErrorCorrection._ExtractLogicalQubitFromSteaneCode
summary: この名前空間には、クォンタムエラー修正のための関数、操作、およびユーザー定義型が含まれています。
uid: Microsoft.Quantum.ErrorCorrection
metadata:
  ms.openlocfilehash: ba16a793fc9389c7102047a6664c0338ea11314d
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92712546"
