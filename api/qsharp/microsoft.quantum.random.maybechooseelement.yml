### YamlMime:QSharpType
uid: microsoft.quantum.random.maybechooseelement
name: MaybeChooseElement
type: operation
namespace: Microsoft.Quantum.Random
summary: データの配列とそのインデックスに対する分布を指定すると、はランダムに要素を選択しようとします。
examples: >-
  次の Q # スニペットは、配列からランダムに要素を選択します。


  ```Q#

  let (succeeded, element) = MaybeChooseElement(
      data,
      DiscreteUniformDistribution(0, Length(data) - 1)
  );

  Fact(succeeded, "Index chosen by MaybeChooseElement was not valid.");

  ```
syntax: "operation MaybeChooseElement (data : 'T[], indexDistribution : Microsoft.Quantum.Random.DiscreteDistribution) : (Bool, 'T)"
input:
  content: "(data : 'T[], indexDistribution : Microsoft.Quantum.Random.DiscreteDistribution)"
  types:
  - name: data
    summary: 要素を選択する配列。
    isArray: true
    uid: "'T"
    isLocal: true
  - name: indexDistribution
    summary: のインデックスに対する分布 `data` 。
    uid: microsoft.quantum.random.discretedistribution
output:
  content: (Bool, 'T)
  types:
  - types:
    - isPrimitive: true
      uid: Bool
    - uid: "'T"
      isLocal: true
metadata:
  ms.openlocfilehash: bbbb821e5826e7722c80010b534a38a828db5630
  ms.sourcegitcommit: 75c4edc7c410cc63dc8352e2a5bef44b433ed188
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 08/25/2020
  ms.locfileid: "88864227"
