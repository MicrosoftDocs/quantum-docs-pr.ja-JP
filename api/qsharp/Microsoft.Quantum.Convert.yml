### YamlMime:QSharpNamespace
uid: microsoft.quantum.convert
name: Microsoft.Quantum.Convert
summary: " # <a name=\"summary\"></a>まとめ\n この名前空間には、さまざまな Q # データ型の間で変換を行うための関数が含まれています。"
functions:
- uid: microsoft.quantum.convert.bigintasboolarray
  summary: >-
    指定した大きい整数をブール値の配列に変換します。

    配列の0要素は、大きい整数の最下位ビットです。
- uid: microsoft.quantum.convert.boolarrayasbigint
  summary: >-
    指定したブール値の配列を等価の大きい整数に変換します。

    配列の0要素は、大きい整数の最下位ビットです。
- uid: microsoft.quantum.convert.boolarrayasint
  summary: リトルエンディアン形式のビット文字列から正の整数を生成します。
- uid: microsoft.quantum.convert.boolarrayaspauli
  summary: ビット文字列を指定した場合は、single qubit の演算子の配列として表されるマルチ qubit の P# li 演算子を返します。
- uid: microsoft.quantum.convert.boolarrayasresultarray
  summary: 型を `Bool[]` 型に変換 `Result[]` `true` します。ここで、はにマップされ、 `One` `false` はにマップされ `Zero` ます。
- uid: microsoft.quantum.convert.boolasresult
  summary: 型を `Bool` 型に変換 `Result` `true` します。ここで、はにマップされ、 `One` `false` はにマップされ `Zero` ます。
- uid: microsoft.quantum.convert.boolasstring
  summary: 指定したブール値を等価の文字列形式に変換します。
- uid: microsoft.quantum.convert.doubleasstring
  summary: 指定した倍精度浮動小数点数値を等価の文字列形式に変換します。
- uid: microsoft.quantum.convert.doubleasstringwithformat
  summary: 指定した書式を使用して、指定した倍精度浮動小数点数を等価の文字列形式に変換します。
- uid: microsoft.quantum.convert.functionasoperation
  summary: 関数を操作に変換します。
- uid: microsoft.quantum.convert.intasbigint
  summary: 指定した整数を等価の大きな整数に変換します。
- uid: microsoft.quantum.convert.intasboolarray
  summary: 返された配列に対してリトルエンディアン表現を使用して、正の整数のバイナリ表現を生成します。
- uid: microsoft.quantum.convert.intasdouble
  summary: 指定した整数を等価の倍精度浮動小数点数に変換します。
- uid: microsoft.quantum.convert.intasstring
  summary: 指定した整数値を等価の文字列形式に変換します。
- uid: microsoft.quantum.convert.intasstringwithformat
  summary: 指定した書式を使用して、指定した整数値を等価の文字列形式に変換します。
- uid: microsoft.quantum.convert.maybebigintasint
  summary: >-
    可能な場合は、指定した大きい整数を等価の整数に変換します。

    関数は、変換が可能であった場合にのみ、結果として得られる整数とブール値のフラグのペアを返します。
- uid: microsoft.quantum.convert.pauliarrayasint
  summary: シングル qubit の演算子の配列として表されるマルチ qubit の Pan Li 演算子を整数にエンコードします。
- uid: microsoft.quantum.convert.rangeasintarray
  summary: Start. で列挙された整数の配列を作成します `arr` 。ステップ..終わり。
- uid: microsoft.quantum.convert.resultarrayasboolarray
  summary: 型を `Result[]` 型に変換 `Bool[]` `One` します。ここで、はにマップされ、 `true` `Zero` はにマップされ `false` ます。
- uid: microsoft.quantum.convert.resultarrayasint
  summary: リトルエンディアン形式の結果の文字列から正の整数を生成します。
- uid: microsoft.quantum.convert.resultasbool
  summary: 型を `Result` 型に変換 `Bool` `One` します。ここで、はにマップされ、 `true` `Zero` はにマップされ `false` ます。
operations:
- uid: microsoft.quantum.convert.call
  summary: 指定された入力を使用して関数を呼び出します。
metadata:
  ms.openlocfilehash: 7ab5e02631823dcf4dee36f98c14212b43381b74
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89341362"
