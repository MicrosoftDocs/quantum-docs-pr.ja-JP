### YamlMime:QSharpType
uid: microsoft.quantum.canon.applypauli
name: ApplyPauli
type: operation
namespace: microsoft.quantum.canon
summary: 指定された複数の演算子がある場合、対応する操作をレジスタに適用します。
examples: >-
  同等のものを次に示します。


  ```qsharp

  ApplyPauli([PauliY, PauliZ, PauliX], target);

  ```


  and


  ```qsharp

  Y(target[0]);

  Z(target[1]);

  X(target[2]);

  ```
syntax: 'operation ApplyPauli (pauli : Pauli[], target : Qubit[]) : Unit'
input:
  content: '(pauli : Pauli[], target : Qubit[])'
  types:
  - name: pauli
    summary: シングル qubit の P# li 演算子の配列として表されるマルチ qubit の Pan Li 演算子。
    isArray: true
    isPrimitive: true
    uid: Pauli
  - name: target
    summary: を登録して、に指定された P# li 操作を適用します。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: a12fa423f1eb7685581674323197f198827c936e
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89358005"
