### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebymodularinteger
name: IncrementPhaseByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  整数定数によって、qubit レジスタのモジュール単位インクリメントを実行します。


  $ `increment` `modulus` と `target` $y $ によってエンコードされた整数を $N $a $ を意味します。

  その後、次の変換が実行されます。 \begin{align} \ket{y} \ mapare \ket{(y + a) \ 演算子名 {mod} N} \end{align} 整数は、QFT ではリトルエンディアン形式でエンコードされます。
remarks: >-
  は `target` 、の最上位ビットが0に設定されていることを前提としています。

  また、target の値が $N $ 未満であることを前提としています。


  回路図と説明については、 [arXiv: quant-ph/0205095v3 のページ 5](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=5)の図5を参照してください。
syntax: 'operation IncrementPhaseByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    summary: $Y $ に加算する $ $a 整数値。
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Mods $y + a $ の整数 $N $。
    isPrimitive: true
    uid: Int
  - name: target
    summary: $ が追加さ $a れる、フェーズでエンコードされたリトルエンディアン形式の整数 $y $ `increment` 。
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementbymodularinteger
metadata:
  ms.openlocfilehash: 92c20afa6753d80a10a38d8c787efab3a295fc2b
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89342841"
