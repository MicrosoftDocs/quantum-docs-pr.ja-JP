### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.compareusingripplecarry
name: CompareUsingRippleCarry
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  この操作では、qubits のレジスタによって表される整数がもう1つの整数より大きいかどうかをテストして、結果の XOR を出力 qubits に適用します。


  2つの整数 `x` と `y` 同じサイズの qubit レジスタに格納されている場合、この操作は `x > y`を満たしているかどうかを確認します。 True の場合、1は出力 qubit に Xor ます。 それ以外の場合、0は出力 qubit に Xor されます。

  言い換えると、この操作は、ユニタリ $ $ \begin{align} U\ket {x} \ k {y} \ k {z} = \ket{x}\ket{y}\ket{z\oplus (x > y)} で表すことができます。

  \end{align} $ $
syntax: 'operation CompareUsingRippleCarry (x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit) : Unit'
references: '- 新しいクォンタム ripple は、Cuccaro、Draper、Samuel Kutin、David Petrie e を追加しています。これは、'
input:
  content: '(x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit)'
  types:
  - name: x
    summary: Qubit レジスタの `LittleEndian` 形式で格納されている最初の数値。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: y
    summary: Qubit レジスタの `LittleEndian` 形式で格納されている2番目の数値。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: output
    summary: 比較 $x > y $ の結果を格納する qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 1ef346a9fd33859abffe9c30b14b5ea95068169d
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76871126"
