### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyccnotchain
name: ApplyCCNOTChain
type: operation
namespace: microsoft.quantum.canon
summary: >-
  2つの qubit レジスタの対応するビットで制御される CCNOT ゲートのカスケードを実装します。これは、いずれかのレジスタの次の qubit で動作します。

  両方のレジスタでコントロールとして位置0にある qubits から、CCNOT はターゲットレジスタの位置1にある qubits に適用され、ターゲットレジスタの位置2の qubits に作用する位置1の qubits によって制御されます。その後、ターゲットの qubits に対するアクションで終了 `Length(nQubits)-1` します。
remarks: ターゲットの qubit レジスタには、もう一方のレジスタよりも1つの qubit が必要です。
syntax: 'operation ApplyCCNOTChain (register : Qubit[], targets : Qubit[]) : Unit'
input:
  content: '(register : Qubit[], targets : Qubit[])'
  types:
  - name: register
    summary: Qubit レジスタ。コントロールにのみ使用されます。
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: Qubit レジスタ。コントロールとターゲットとして使用されます。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: bed26b605d9924a10a663c238d61914b381abb9d
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91473668"
