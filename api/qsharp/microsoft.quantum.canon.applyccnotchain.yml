### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyccnotchain
name: ApplyCCNOTChain
type: operation
namespace: microsoft.quantum.canon
summary: >-
  2つの qubit レジスタの対応するビットで制御される CCNOT ゲートのカスケードを実装します。これは、いずれかのレジスタの次の qubit で動作します。

  両方のレジスタでコントロールとして位置0にある qubits から、CCNOT はターゲットレジスタの位置1にある qubits に適用され、ターゲットレジスタの位置2の qubits に作用する位置1の qubits によって制御されます。その後、ターゲットの qubits に対するアクションで終了 `Length(nQubits)-1` します。
remarks: ターゲットの qubit レジスタには、もう一方のレジスタよりも1つの qubit が必要です。
syntax: 'operation ApplyCCNOTChain (register : Qubit[], targets : Qubit[]) : Unit'
input:
  content: '(register : Qubit[], targets : Qubit[])'
  types:
  - name: register
    summary: Qubit レジスタ。コントロールにのみ使用されます。
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: Qubit レジスタ。コントロールとターゲットとして使用されます。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 05ea20f0c8fddc1f108301f79908c6e59f8e9ec7
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89350848"
