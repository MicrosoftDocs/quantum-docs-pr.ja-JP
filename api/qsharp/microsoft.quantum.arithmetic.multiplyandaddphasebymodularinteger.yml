### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
name: MultiplyAndAddPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: MultiplyAndAddByModularInteger と同じですが、summand が QFT ベースで整数をエンコードすることを前提としています。
remarks: >-
  は、 `phaseSummand`の最上位ビットが0に設定されていることを前提としています。

  また、の`phaseSummand`値が $N $ 未満であることを前提としています。
syntax: 'operation MultiplyAndAddPhaseByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, phaseSummand : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: に関して、加算と乗算が行われる剰余 $N $。
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: の`summand`各 basis 状態ラベルに値を追加する符号なし整数を表すクォンタムレジスタ。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: phaseSummand
    summary: この操作のターゲットとして使用する符号なし整数を表すクォンタムレジスタ。
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
metadata:
  ms.openlocfilehash: 029ff8fb767ae018b7462f19a5fe09e83e606c6e
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672798"
