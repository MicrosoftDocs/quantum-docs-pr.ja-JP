### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections
name: AmplitudeAmplificationFromPartialReflections
type: function
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: 部分的な反射による振幅増幅。
remarks: >-
  振幅増幅は、システム qubits がなく、無関係 oracle が id に設定されている無関係の振幅増幅の特殊なケースです。

  ほとんどの場合、 `startQubits`は、の\_ `startStateReflection`$-$1 eigenstate という状態で、$ \ket{\text{start}} $1 状態で初期化されます。
syntax: 'function AmplitudeAmplificationFromPartialReflections (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle) : (Qubit[] => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle)'
  types:
  - name: phases
    summary: 部分的な反射のフェーズ
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateReflection
    summary: 開始状態に関するリフレクション演算子
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: targetStateReflection
    summary: 対象の状態に関するリフレクション演算子
    uid: microsoft.quantum.oracles.reflectionoracle
output:
  content: (Qubit[] => Unit is Adj + Ctl)
  types:
  - summary: 部分的な反射による振幅増幅を実装する操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 4dae118f99c8a2e7cf933a378ed38d414a94fef4
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82672999"
