### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.greaterthan
name: GreaterThan
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: は、qubit レジスタ xs および y でエンコードされた、$ および $y $ $x 2 つの整数の比較を厳密に上回る比較を実行します。 $X > y $ の場合は、結果の qubit が反転されます。それ以外の場合は、その状態を保持します。
remarks: は、-y = (x ' + y) ' $ の $x を使用します。ここで、' は1の補数を表します。
syntax: 'operation GreaterThan (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Qubit) : Unit'
references: >-
  - Cuccaro、Draper、Samuel、Kutin、David Petrie の: "新しいクォンタム ripple-キャリー追加回路", 2004 ですが、このようになります。
    https://arxiv.org/abs/quant-ph/0410184v1

  - トーマス Haener、Martin Roetteler、Krysta: "2n + 2 qubits と Toffoli based のモジュール乗算を使用したファクタリング"、2016 https://arxiv.org/abs/1611.07995
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Qubit)'
  types:
  - name: xs
    summary: LittleEndian qubit レジスタは、$ $x 最初の整数をエンコードします。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: LittleEndian qubit レジスタでは、2番目の整数 $y $ としてエンコードされます。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: Y $ $x > 場合に反転される単一の qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: 6961a6a4f22d2290a264298a3be3b15f7bdb0ac7
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73214947"
