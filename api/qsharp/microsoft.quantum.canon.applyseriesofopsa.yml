### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyseriesofopsa
name: ApplySeriesOfOpsA
type: operation
namespace: Microsoft.Quantum.Canon
summary: Ops とそのターゲットの一覧を配列に順番に適用します。 (Adjoint)
syntax: "operation ApplySeriesOfOpsA (listOfOps : ('T[] => Unit is Adj)[], targets : Int[][], register : 'T[]) : Unit"
input:
  content: "(listOfOps : ('T[] => Unit is Adj)[], targets : Int[][], register : 'T[])"
  types:
  - name: listOfOps
    summary: >-
      適用する操作のリスト。それぞれ t 配列を取得します。 これらは順番に適用され、最下位のインデックスが最初に適用されます。

      各には、adjoint ファンクタが必要です。
    isArray: true
    isOperation: true
    input:
      types:
      - isArray: true
        uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: targets
    summary: Op のターゲットを記述する入れ子になった配列。 各配列には、使用するインデックスを記述する整数のリストを含める必要があります。
    isArray: true
    types:
    - isArray: true
      isPrimitive: true
      uid: Int
  - name: register
    summary: 操作する qubit レジスタ。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
seeAlso:
- microsoft.quantum.canon.applyoprepeatedlyover
metadata:
  ms.openlocfilehash: 0d48ff75f99ea7fd3b7c65790ef6c5d184532f82
  ms.sourcegitcommit: 27c9bf1aae923527aa5adeaee073cb27d35c0ca1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 12/05/2019
  ms.locfileid: "74866395"
