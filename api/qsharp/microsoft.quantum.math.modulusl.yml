### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusl
name: ModulusL
type: function
namespace: Microsoft.Quantum.Math
summary: 剰余`value` `modulus`の正規の residue を計算します。
remarks: 'この関数は、演算子`%`が C# および Q # で動作する方法とは異なり、値が負の場合でも`modulus - 1`、結果は常に 0 ~ の正の整数になります。'
syntax: 'function ModulusL (value : BigInt, modulus : BigInt) : BigInt'
input:
  content: '(value : BigInt, modulus : BigInt)'
  types:
  - name: value
    summary: Residue が計算される値
    isPrimitive: true
    uid: BigInt
  - name: modulus
    summary: Residues の取得に使用する剰余。正の整数である必要があります
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt
  types:
  - summary: 0から、 `modulus - 1`剰余で割り切れた`value - r`整数 $r $
    isPrimitive: true
    uid: BigInt
metadata:
  ms.openlocfilehash: c4a9403cc5c2bf62e43b5cc248fb9502f15818e8
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686625"
