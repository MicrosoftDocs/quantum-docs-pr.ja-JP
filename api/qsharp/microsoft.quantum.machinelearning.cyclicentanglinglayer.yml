### YamlMime:QSharpType
uid: microsoft.quantum.machinelearning.cyclicentanglinglayer
name: CyclicEntanglingLayer
type: function
namespace: microsoft.quantum.machinelearning
summary: 指定された軸に沿って1つの制御された回転の配列を返します。 qubits のレジスタで周期的に配置され、個別のモデルパラメーターによってパラメーター化されます。
examples: >-
  同等のものを次に示します。


  ```Q#

  let layer = CyclicEntanglingLayer(3, PauliX, 2);

  let layer = [
      ControlledRotation((0, [2]), PauliX, 0),
      ControlledRotation((1, [0]), PauliX, 1),
      ControlledRotation((2, [1]), PauliX, 2)
  ];

  ```
syntax: 'function CyclicEntanglingLayer (nQubits : Int, axis : Pauli, stride : Int) : Microsoft.Quantum.MachineLearning.ControlledRotation[]'
input:
  content: '(nQubits : Int, axis : Pauli, stride : Int)'
  types:
  - name: nQubits
    summary: 指定したレイヤーによって操作された qubits の数。
    isPrimitive: true
    uid: Int
  - name: axis
    summary: 指定されたレイヤー内の各回転の回転軸。
    isPrimitive: true
    uid: Pauli
  - name: stride
    summary: 各回転のターゲットと制御のインデックスを分離する。
    isPrimitive: true
    uid: Int
output:
  content: Microsoft.Quantum.MachineLearning.ControlledRotation[]
  types:
  - summary: Qubit のレジスタ間で周期的に配置された、2つの qubit 制御された回転の配列 `nQubits` 。
    isArray: true
    uid: microsoft.quantum.machinelearning.controlledrotation
metadata:
  ms.openlocfilehash: 5b60091a80c6ceac399aa495b46db5920dd7bf9e
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91491042"
