### YamlMime:QSharpType
uid: microsoft.quantum.simulation.pauliblockencoding
name: PauliBlockEncoding
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Hamiltonian のブロックエンコードのユニタリを作成します。


  Hamiltonian $H = \sum_{j}\alpha_j P_j $ は、j $ $P の合計によって記述されており、それぞれに実際の係数 $ \alpha_j $ が含まれています。
remarks: これを取得するには、状態 $ \ sum_ {j} \ sqrt {\ alpha_j/\ alpha} \ k {j} $ を準備して準備を解除し、乗算制御された <xref:microsoft.quantum.preparation.statepreparationpositivecoefficients> と <xref:microsoft.quantum.canon.multiplexoperationsfromgenerator>を構築します。
syntax: 'function PauliBlockEncoding (generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem) : (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)'
input:
  content: '(generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem)'
  types:
  - name: generatorSystem
    summary: $ $H を、P# li 用語の合計として記述する `GeneratorSystem`
    uid: microsoft.quantum.simulation.generatorsystem
output:
  content: (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)
  types:
  - summary: >-
      ## <a name="first-parameter"></a>最初のパラメーター


      係数 $-alpha = \alpha_j | $ の1つの基準になります。


      ## <a name="second-parameter"></a>2番目のパラメーター


      Hamiltonian $H $ の `BlockEncodingReflection` のユニタリ $U $。 このユニタリは $U ^ 2 = I $ に一致するので、リフレクションでもあります。
    types:
    - isPrimitive: true
      uid: Double
    - uid: microsoft.quantum.simulation.blockencodingreflection
ms.openlocfilehash: 352ab71457601c38b22e93f706cb59f50bf24151
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73216137"
