### YamlMime:QSharpType
uid: microsoft.quantum.simulation.pauliblockencoding
name: PauliBlockEncoding
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  Hamiltonian のブロックエンコードのユニタリを作成します。


  Hamiltonian $H = \ sum_ {j} \ alpha_j P_j $ は、$ $ \ $P $ という実数の合計によって記述されます。
remarks: これを取得するには、状態 $ \ sum_ {j} \ sqrt{\ alpha_j/\alpha}\ket{j} $ を準備して準備を解除し、乗算<xref:microsoft.quantum.preparation.statepreparationpositivecoefficients>に<xref:microsoft.quantum.canon.multiplexoperationsfromgenerator>よって制御されるユニタリおよびを構築します。
syntax: 'function PauliBlockEncoding (generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem) : (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)'
input:
  content: '(generatorSystem : Microsoft.Quantum.Simulation.GeneratorSystem)'
  types:
  - name: generatorSystem
    summary: $ `GeneratorSystem` $H を、P# li 用語の合計として記述する。
    uid: microsoft.quantum.simulation.generatorsystem
output:
  content: (Double, Microsoft.Quantum.Simulation.BlockEncodingReflection)
  types:
  - summary: >-
      ## <a name="first-parameter"></a>最初のパラメーター


      係数 $ \ alpha = \ sum_ {j} | \ alpha_j | $ の1つの基準です。


      ## <a name="second-parameter"></a>2番目のパラメーター


      Hamiltonian `BlockEncodingReflection` $H $ の1つの $U ($) です。 このユニタリは $U ^ 2 = I $ に一致するので、リフレクションでもあります。
    types:
    - isPrimitive: true
      uid: Double
    - uid: microsoft.quantum.simulation.blockencodingreflection
metadata:
  ms.openlocfilehash: 75b614fa23f2e00a3a960224d79905106fb06070
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82682541"
