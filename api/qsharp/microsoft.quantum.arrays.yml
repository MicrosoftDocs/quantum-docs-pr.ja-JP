### YamlMime:QSharpNamespace
functions:
- summary: 配列と、配列の要素に対して定義されている述語が指定されている場合、配列のすべての要素が述語を満たすかどうかを確認します。
  uid: Microsoft.Quantum.Arrays.All
- summary: 配列と、配列の要素に対して定義された述語が指定されている場合、配列の少なくとも1つの要素が述語を満たすかどうかを確認します。
  uid: Microsoft.Quantum.Arrays.Any
- summary: 配列を同じ長さの複数の部分に分割します。
  uid: Microsoft.Quantum.Arrays.Chunks
- summary: マトリックスから列を抽出します。
  uid: Microsoft.Quantum.Arrays.ColumnAt
- summary: この関数は、マトリックス図形を確認しません
  uid: Microsoft.Quantum.Arrays.ColumnAtUnchecked
- summary: 指定された値と等しいすべての要素を使用して、指定された長さの配列を作成します。
  uid: Microsoft.Quantum.Arrays.ConstantArray
- summary: 配列と、配列の要素に対して定義された述語を指定すると、は、述語を満たす要素で構成される配列の要素数を返します。
  uid: Microsoft.Quantum.Arrays.Count
- summary: マップされたフォールドを1つの関数に結合します
  uid: Microsoft.Quantum.Arrays.CumulativeFolded
- summary: 2次元配列の対角線要素の配列を返します。
  uid: Microsoft.Quantum.Arrays.Diagonal
- summary: 配列の指定したインデックス位置にあるを返します。
  uid: Microsoft.Quantum.Arrays.ElementAt
- summary: ''
  uid: Microsoft.Quantum.Arrays.ElementAtDiagonal
- summary: 指定されたインデックスの範囲で配列の要素を返します。
  uid: Microsoft.Quantum.Arrays.ElementsAt
- summary: 指定された型の空の配列を返します。
  uid: Microsoft.Quantum.Arrays.EmptyArray
- summary: 配列が指定された場合、は、元の配列の要素と各要素のインデックスを含む新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.Enumerated
- summary: 同じ型の2つの配列と、配列の要素のペアに対して定義されている述語を指定すると、配列が等しいかどうかがチェックされます。
  uid: Microsoft.Quantum.Arrays.EqualA
- summary: 指定されたインデックスリストの要素を除く、別の配列の要素を含む配列を返します。
  uid: Microsoft.Quantum.Arrays.Exclude
- summary: 指定されたインデックスリストの要素を除く、別の配列の要素を含む配列を返します。
  uid: Microsoft.Quantum.Arrays.Excluding
- summary: 配列と、配列の要素に対して定義された述語が指定されている場合、は述語を満たす要素で構成される配列を返します。
  uid: Microsoft.Quantum.Arrays.Filtered
- summary: 配列と、配列要素をいくつかの出力配列にマップする関数を指定すると、配列要素ごとに連結された出力配列が返されます。
  uid: Microsoft.Quantum.Arrays.FlatMapped
- summary: 配列の配列を指定すると、すべての配列の連結が返されます。
  uid: Microsoft.Quantum.Arrays.Flattened
- summary: 配列を使用して関数を反復処理し `f` `array` 、を返し `f(f(f(initialState, array[0]), array[1]), ...)` ます。
  uid: Microsoft.Quantum.Arrays.Fold
- summary: 配列の最初の要素を返します。
  uid: Microsoft.Quantum.Arrays.Head
- summary: 配列の最初の要素と残りのすべての要素の組を返します。
  uid: Microsoft.Quantum.Arrays.HeadAndRest
- summary: ''
  uid: Microsoft.Quantum.Arrays.Identity
- summary: 指定された述語を満たす配列内の最初の要素の最初のインデックスを返します。 そのような要素が存在しない場合は、-1 を返します。
  uid: Microsoft.Quantum.Arrays.IndexOf
- summary: 配列を指定した場合は、その配列のインデックスに対する範囲を返します。 for ループでの使用に適しています。
  uid: Microsoft.Quantum.Arrays.IndexRange
- summary: (ほぼ) 同じサイズの2つの配列を相互に保持します。
  uid: Microsoft.Quantum.Arrays.Interleaved
- summary: 配列が空の場合にのみ true を返します。
  uid: Microsoft.Quantum.Arrays.IsEmpty
- summary: 指定された配列が順列を表す場合にのみ、true を出力します。
  uid: Microsoft.Quantum.Arrays.IsPermutation
- summary: 配列が指定されている場合、指定された比較関数によって定義されたとおりに配列が並べ替えられるかどうかを返します。
  uid: Microsoft.Quantum.Arrays.IsSorted
- summary: ''
  uid: Microsoft.Quantum.Arrays.IsValuePresent
- summary: 配列が指定されている場合、その配列の要素を返す関数を返します。
  uid: Microsoft.Quantum.Arrays.LookupFunction
- summary: 配列と、配列の要素に対して定義されている関数を指定すると、関数の下にある元の配列のイメージで構成される新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.Mapped
- summary: 配列と、配列のインデックス付き要素に対して定義された関数を指定すると、関数の下にある元の配列のイメージで構成される新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.MappedByIndex
- summary: 入力として整数を受け取る範囲と関数を指定した場合は、関数の下の範囲値のイメージで構成される新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.MappedOverRange
- summary: 2つの並べ替えられた配列を指定した場合、両方のの要素が並べ替えられた順序で格納された単一の配列を返します。 Merge sort によって内部的に使用されます。
  uid: Microsoft.Quantum.Arrays.Merged
- summary: 最後の配列要素が削除される点を除いて、入力配列と等しい配列を作成します。
  uid: Microsoft.Quantum.Arrays.Most
- summary: 配列の最後の要素以外のすべてのタプルを返します。
  uid: Microsoft.Quantum.Arrays.MostAndTail
- summary: 指定された値で指定した長さまで、に埋め込まれた配列を返します。
  uid: Microsoft.Quantum.Arrays.Padded
- summary: 配列を複数の部分に分割します。
  uid: Microsoft.Quantum.Arrays.Partitioned
- summary: ''
  uid: Microsoft.Quantum.Arrays.Prefix
- summary: 配列を指定すると、そのすべてのプレフィックスが返されます。
  uid: Microsoft.Quantum.Arrays.Prefixes
- summary: 2次元配列に四角形の形状がある条件を表します。
  uid: Microsoft.Quantum.Arrays.RectangularArrayFact
- summary: 最初の配列要素が削除される点を除いて、入力配列と等しい配列を作成します。
  uid: Microsoft.Quantum.Arrays.Rest
- summary: 入力配列と同じ要素が逆順に含まれる配列を作成します。
  uid: Microsoft.Quantum.Arrays.Reversed
- summary: 指定された間隔で整数の配列を取得します。
  uid: Microsoft.Quantum.Arrays.SequenceI
- summary: 指定された間隔で整数の配列を取得します。
  uid: Microsoft.Quantum.Arrays.SequenceL
- summary: 配列が指定された場合、は、指定された比較関数によって並べ替えられた配列の要素を返します。
  uid: Microsoft.Quantum.Arrays.Sorted
- summary: 2次元配列に正方形の形状がある条件を表します。
  uid: Microsoft.Quantum.Arrays.SquareArrayFact
- summary: 配列と場所のリストを受け取り、指定した場所に一致する元の配列の要素から新しい配列を作成します。
  uid: Microsoft.Quantum.Arrays.Subarray
- summary: 配列内の2つの要素のスワップを適用します。
  uid: Microsoft.Quantum.Arrays.Swapped
- summary: 配列の最後の要素を返します。
  uid: Microsoft.Quantum.Arrays.Tail
- summary: 配列の配列として表される行列の転置を返します。
  uid: Microsoft.Quantum.Arrays.Transposed
- summary: 2つのタプルのリストを入れ子になった配列に変換します。
  uid: Microsoft.Quantum.Arrays.TupleArrayAsNestedArray
- summary: 隣接する要素が等しくない新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.Unique
- summary: 2組の配列を指定すると、2つの配列の組を返します。各配列には、入力配列の組の要素が含まれます。
  uid: Microsoft.Quantum.Arrays.Unzipped
- summary: 述語と配列が指定されている場合、述語が true である配列のインデックスを返します。
  uid: Microsoft.Quantum.Arrays.Where
- summary: 長さの連続するすべてのサブを返し `size` ます。
  uid: Microsoft.Quantum.Arrays.Windows
- summary: >-
    > [!WARNING]

    > Zip は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Arrays.Zipped> を使用してください。


    2つの配列を指定すると、は、各ペアに各元の配列の要素が含まれるように、ペアの新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.Zip
- summary: >-
    > [!WARNING]

    > Array.zip3 は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Arrays.Zipped3> を使用してください。


    3つの配列を指定すると、3組の新しい配列が返されます。これにより、各3組には各元の配列の要素が含まれます。
  uid: Microsoft.Quantum.Arrays.Zip3
- summary: >-
    > [!WARNING]

    > Zip4 は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Arrays.Zipped4> を使用してください。


    4つの配列がある場合、4組の新しい配列を返して、各4組に各元の配列の要素が格納されるようにします。
  uid: Microsoft.Quantum.Arrays.Zip4
- summary: 2つの配列を指定すると、は、各ペアに各元の配列の要素が含まれるように、ペアの新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.Zipped
- summary: 3つの配列を指定すると、3組の新しい配列が返されます。これにより、各3組には各元の配列の要素が含まれます。
  uid: Microsoft.Quantum.Arrays.Zipped3
- summary: 4つの配列がある場合、4組の新しい配列を返して、各4組に各元の配列の要素が格納されるようにします。
  uid: Microsoft.Quantum.Arrays.Zipped4
- summary: 順序付けされた配列を生成するために、配列内の順序要素を交換する必要があることを返します。 スワップが行われることを前提としています。
  uid: Microsoft.Quantum.Arrays._SwapOrderToPermuteArray
name: Microsoft.Quantum.Arrays
newtypes: []
operations:
- summary: 指定された数のサンプルに対して操作を繰り返し、配列内の出力を収集します。
  uid: Microsoft.Quantum.Arrays.DrawMany
- summary: 配列と、配列の要素に対して定義されている操作が指定された場合、は、操作の下にある元の配列のイメージで構成される新しい配列を返します。
  uid: Microsoft.Quantum.Arrays.ForEach
summary: この名前空間には、データの配列を作成および操作するための関数が含まれています。
uid: Microsoft.Quantum.Arrays
metadata:
  ms.openlocfilehash: aa551a5e9372bd63335a3a9ae3d817628722c09d
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92719378"
