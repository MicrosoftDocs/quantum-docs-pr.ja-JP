### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingtoreflection
name: BlockEncodingToReflection
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  `BlockEncoding` を同等の `BLockEncodingReflection`に変換します。


  つまり、$H の演算子をエンコードする `BlockEncoding` の $U $ があるとします。これは、同じ演算子をエンコードする `BlockEncodingReflection` $U ' $ に変換されますが、$U ' ^-ダガー = U ' $ にも適合します。

  これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
remarks: これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
syntax: 'function BlockEncodingToReflection (blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding) : Microsoft.Quantum.Simulation.BlockEncodingReflection'
references: '- Qubitization Guang Hao Low、Isaac Hamiltonian、語 https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding)'
  types:
  - name: blockEncoding
    summary: リフレクションに変換する `BlockEncoding` の $U $。
    uid: microsoft.quantum.simulation.blockencoding
output:
  content: Microsoft.Quantum.Simulation.BlockEncodingReflection
  types:
  - summary: $U ' $ はレジスタに共同で動作する ' $ ' と `s` $H をブロックエンコードし、$U ' ^ `a` = U ' $ を満たすようにします。
    uid: microsoft.quantum.simulation.blockencodingreflection
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: 47eba3c59ef30f89139830aa4d9b98d22d141d8f
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73065624"
