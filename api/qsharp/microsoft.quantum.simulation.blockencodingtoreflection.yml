### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingtoreflection
name: BlockEncodingToReflection
type: function
namespace: microsoft.quantum.simulation
summary: >-
  を等価のに変換 `BlockEncoding` `BLockEncodingReflection` します。


  つまり、 `BlockEncoding` $H $ of 演算子をエンコードする $U $ という文字列を指定した場合は、 `BlockEncodingReflection` 同じ演算子をエンコードする $U ' $ に変換しますが $U ' ^ ダガー = U ' $ も満たされます。

  これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
remarks: これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
syntax: 'function BlockEncodingToReflection (blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding) : Microsoft.Quantum.Simulation.BlockEncodingReflection'
references: '- Hamiltonian シミュレーション Qubitization Guang Hao Low、Isaac L. 語 https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding)'
  types:
  - name: blockEncoding
    summary: リフレクションに変換される、$U の ' $ ' という1つの `BlockEncoding` を指定します。
    uid: microsoft.quantum.simulation.blockencoding
output:
  content: Microsoft.Quantum.Simulation.BlockEncodingReflection
  types:
  - summary: $U ' $ はレジスタに対して共同で動作し、 `a` `s` $H $ をブロックエンコードし $U ' ^ ダガー = U ' $ を満たすことができます。
    uid: microsoft.quantum.simulation.blockencodingreflection
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: 50c1af14a110401074b4cd6538377de9626ba866
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89343419"
