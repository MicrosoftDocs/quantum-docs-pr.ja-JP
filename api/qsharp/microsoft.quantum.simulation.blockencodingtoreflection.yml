### YamlMime:QSharpType
uid: microsoft.quantum.simulation.blockencodingtoreflection
name: BlockEncodingToReflection
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  を`BlockEncoding`等価`BLockEncodingReflection`のに変換します。


  つまり、$H $ of `BlockEncoding`演算子をエンコードする $U $ という文字列を指定した場合は、 `BlockEncodingReflection`同じ演算子をエンコードする $U ' $ に変換しますが $U ' ^ ダガー = U ' $ も満たされます。

  これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
remarks: これにより、$U $ の補助レジスタのサイズが 1 qubit だけ増加します。
syntax: 'function BlockEncodingToReflection (blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding) : Microsoft.Quantum.Simulation.BlockEncodingReflection'
references: '- Hamiltonian シミュレーション Qubitization Guang Hao Low、Isaac L. 語https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncoding)'
  types:
  - name: blockEncoding
    summary: リフレクション`BlockEncoding`に変換される、$U の ' $ ' という1つのを指定します。
    uid: microsoft.quantum.simulation.blockencoding
output:
  content: Microsoft.Quantum.Simulation.BlockEncodingReflection
  types:
  - summary: $U ' $ はレジスタ`a`に対して共同で`s`動作し、$H $ をブロックエンコードし $U ' ^ ダガー = U ' $ を満たすことができます。
    uid: microsoft.quantum.simulation.blockencodingreflection
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: e656a5ab9e187660a20420049374380ef9726647
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686915"
