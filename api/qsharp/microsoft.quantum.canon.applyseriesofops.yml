### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyseriesofops
name: ApplySeriesOfOps
type: operation
namespace: Microsoft.Quantum.Canon
summary: Ops とそのターゲットの一覧を配列に順番に適用します。
syntax: "operation ApplySeriesOfOps (listOfOps : ('T[] => Unit)[], targets : Int[][], register : 'T[]) : Unit"
input:
  content: "(listOfOps : ('T[] => Unit)[], targets : Int[][], register : 'T[])"
  types:
  - name: listOfOps
    summary: 適用する操作のリスト。それぞれ t 配列を取得します。 これらは順番に適用され、最下位のインデックスが最初に適用されます。
    isArray: true
    isOperation: true
    input:
      types:
      - isArray: true
        uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: targets
    summary: Op のターゲットを記述する入れ子になった配列。 各配列には、使用するインデックスを記述する整数のリストを含める必要があります。
    isArray: true
    types:
    - isArray: true
      isPrimitive: true
      uid: Int
  - name: register
    summary: 操作する qubit レジスタ。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.canon.applyoprepeatedlyover
metadata:
  ms.openlocfilehash: 62c4494fb60a69eb52eca2d3fa97b41eb9b7f020
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82671148"
