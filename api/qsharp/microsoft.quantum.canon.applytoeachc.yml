### YamlMime:QSharpType
uid: microsoft.quantum.canon.applytoeachc
name: ApplyToEachC
type: operation
namespace: microsoft.quantum.canon
summary: >-
  レジスタ内の各要素に単一の qubit 演算を適用します。

  修飾子は、 `C` single qubit 操作が制御可能であることを示します。
examples: >-
  3 qubit $ \ket{+} $ 状態を準備します。


  ```qsharp

  using (register = Qubit[3]) {
      ApplyToEach(H, register);
  }

  ```
syntax: "operation ApplyToEachC (singleElementOperation : ('T => Unit is Ctl), register : 'T[]) : Unit"
input:
  content: "(singleElementOperation : ('T => Unit is Ctl), register : 'T[])"
  types:
  - name: singleElementOperation
    summary: 各 qubit に適用する操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: register
    summary: 指定された操作を適用する qubits の配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 操作が動作するターゲット。
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applytoeach
metadata:
  ms.openlocfilehash: 877c9497221466c5765a683d5ab0b6adeca542e1
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91468840"
