### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  整数定数によって、qubit レジスタのモジュール単位インクリメントを実行します。


  $ `increment` `modulus` と `target` $y $ によってエンコードされた整数を $N $a $ を意味します。

  その後、次の変換が実行されます。 \begin{align} \ket{y} \ mapare \ket{(y + a) \ 演算子名 {mod} N} \end{align} 整数はリトルエンディアン形式でエンコードされます。
remarks: >-
  Target の初期値が $N $ より小さく、$ $a $ が $N $ より小さいことを前提としています。

  は <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> 、ベースで同じ操作を実装することに注意して `PhaseLittleEndian` ください。
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: $Y $ に加算する $ $a 整数値。
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Mods $y + a $ の整数 $N $。
    isPrimitive: true
    uid: Int
  - name: target
    summary: '`LittleEndian` `increment` $A $ が追加される形式の整数 $y $。'
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementphasebymodularinteger
metadata:
  ms.openlocfilehash: 7ea6dde359868fe2b5faf78b478df98de091377f
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91477133"
