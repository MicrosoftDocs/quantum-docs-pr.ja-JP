### YamlMime:QSharpType
uid: microsoft.quantum.convert.boolarrayaspauli
name: BoolArrayAsPauli
type: function
namespace: Microsoft.Quantum.Convert
summary: ビット文字列を指定した場合は、single qubit の演算子の配列として表されるマルチ qubit の P# li 演算子を返します。
remarks: ブール型の配列とクォンタムレジスタは同じ長さである必要があります。
syntax: 'function BoolArrayAsPauli (pauli : Pauli, bitApply : Bool, bits : Bool[]) : Pauli[]'
input:
  content: '(pauli : Pauli, bitApply : Bool, bits : Bool[])'
  types:
  - name: pauli
    summary: '`bitsApply == bits[idx]`する qubits に適用する p# li 演算子。'
    isPrimitive: true
    uid: Pauli
  - name: bitApply
    summary: bit がこの値の場合は、P# li を適用します。
    isPrimitive: true
    uid: Bool
  - name: bits
    summary: ブール型の配列。
    isArray: true
    isPrimitive: true
    uid: Bool
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
ms.openlocfilehash: 3d251215e7f7bc136092caf7bafd677ecb1c05bd
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73227187"
