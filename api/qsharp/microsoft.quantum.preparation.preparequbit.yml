### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparequbit
name: PrepareQubit
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  指定された Pauli 演算子の`Zero`+ 1 () eigenstate で qubit を準備します。

  Id 演算子が指定されている場合、qubit は下回っ mixed 状態で準備されます。


  Qubit が最初に $ \ket{0}$ 状態であった場合、この操作は、指定された p li 演算子の $ + $1 eigenstate の qubit を準備`PauliI`します。または、の場合は<xref:microsoft.quantum.preparation.preparesinglequbitidentity>、代わりに下回っ mixed 状態 (を参照) で qubit を準備します。


  Qubit が $ \ket{0}$ 以外の状態であった場合、この操作では次のゲートが適用さ`PauliX`れます。 $H `PauliY`$ for、$HS `PauliZ` $ <xref:microsoft.quantum.preparation.preparesinglequbitidentity> for `PauliI`、$I $ for および for。
syntax: 'operation PrepareQubit (basis : Pauli, qubit : Qubit) : Unit'
input:
  content: '(basis : Pauli, qubit : Qubit)'
  types:
  - name: basis
    summary: P$P Li 演算子は $ です。
    isPrimitive: true
    uid: Pauli
  - name: qubit
    summary: 準備する qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 70032bd9174bb987206e2084e2788e5ac7169ae7
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681119"
