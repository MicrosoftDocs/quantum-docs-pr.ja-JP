### YamlMime:QSharpType
uid: microsoft.quantum.arrays.foreach
name: ForEach
type: operation
namespace: Microsoft.Quantum.Arrays
summary: 配列と、配列の要素に対して定義されている操作が指定された場合、は、操作の下にある元の配列のイメージで構成される新しい配列を返します。
remarks: "この操作は、ジェネリック型に対して定義されます。つまり、 `'T[]`配列と操作`action : 'T -> 'U`がある場合は、配列の要素をマップし、型`'U[]`の新しい配列を生成できます。"
syntax: "operation ForEach (action : ('T => 'U), array : 'T[]) : 'U[]"
input:
  content: "(action : ('T => 'U), array : 'T[])"
  types:
  - name: action
    summary: 各要素に`'T`適用`'U`されるからへの操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
  - name: array
    summary: 上`'T`の要素の配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'U[]"
  types:
  - summary: 操作によってマップされる要素の配列`'U[]` `action`
    isArray: true
    uid: "'U"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: 要素の`array`型。
- uid: "'U"
  summary: '`action`操作の結果の種類。'
metadata:
  ms.openlocfilehash: af4b6b469017e4cee581a9bdd96ef6171d9b1deb
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82681034"
