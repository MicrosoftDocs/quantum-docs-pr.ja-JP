### YamlMime:QSharpType
uid: microsoft.quantum.arrays.foreach
name: ForEach
type: operation
namespace: microsoft.quantum.arrays
summary: 配列と、配列の要素に対して定義されている操作が指定された場合、は、操作の下にある元の配列のイメージで構成される新しい配列を返します。
remarks: "この操作は、ジェネリック型に対して定義されます。つまり、配列と操作がある場合は、 `'T[]` `action : 'T -> 'U` 配列の要素をマップし、型の新しい配列を生成でき `'U[]` ます。"
syntax: "operation ForEach (action : ('T => 'U), array : 'T[]) : 'U[]"
input:
  content: "(action : ('T => 'U), array : 'T[])"
  types:
  - name: action
    summary: "`'T` `'U` 各要素に適用されるからへの操作。"
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'U"
        isLocal: true
  - name: array
    summary: 上の要素の配列 `'T` 。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'U[]"
  types:
  - summary: "`'U[]`操作によってマップされる要素の配列 `action` 。"
    isArray: true
    uid: "'U"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: 要素の型 `array` 。
- uid: "'U"
  summary: 操作の結果の種類 `action` 。
metadata:
  ms.openlocfilehash: c630f23c57ccba1588e553641acf61312411f146
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352276"
