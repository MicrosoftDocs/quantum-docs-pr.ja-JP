### YamlMime:QSharpType
uid: microsoft.quantum.arrays.fold
name: Fold
type: function
namespace: microsoft.quantum.arrays
summary: 配列を使用して関数を反復処理し `f` `array` 、を返し `f(f(f(initialState, array[0]), array[1]), ...)` ます。
examples: >-
  ```qsharp

  function Plus(a : Double, b : Double) {
      return a + b;
  }

  function Sum(xs : Double[]) {
      return Fold(Plus, 0.0, xs);
  }

  ```
syntax: "function Fold (folder : (('State, 'T) -> 'State), state : 'State, array : 'T[]) : 'State"
input:
  content: "(folder : (('State, 'T) -> 'State), state : 'State, array : 'T[])"
  types:
  - name: folder
    summary: 配列に対して折りたたむ関数。
    isFunction: true
    input:
      types:
      - uid: "'State"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'State"
        isLocal: true
  - name: state
    summary: フォルダーの初期状態です。
    uid: "'State"
    isLocal: true
  - name: array
    summary: 折りたたむ値の配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'State"
  types:
  - summary: のすべての要素を反復処理した後に、フォルダーによって返される最終的な状態 `array` 。
    uid: "'State"
    isLocal: true
typeParameters:
- uid: "'State"
  summary: 関数が操作する状態の型 `folder` 。つまり、最初の引数としてを受け取り、を返します。
- uid: "'T"
  summary: 要素の型 `array` 。
metadata:
  ms.openlocfilehash: 584344137b498a9c5348cb1f0a0cb85aeec127bd
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352310"
