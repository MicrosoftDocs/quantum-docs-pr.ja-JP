### YamlMime:QSharpType
uid: microsoft.quantum.arrays.fold
name: Fold
type: function
namespace: Microsoft.Quantum.Arrays
summary: 配列 `array`を通じて関数 `f` を反復処理し、`f(f(f(initialState, array[0]), array[1]), ...)`を返します。
examples: >-
  ```qsharp

  function Plus(a : Double, b : Double) {
      return a + b;
  }

  function Sum(xs : Double[]) {
      return Fold(Plus, 0.0, xs);
  }

  ```
syntax: "function Fold (folder : (('State, 'T) -> 'State), state : 'State, array : 'T[]) : 'State"
input:
  content: "(folder : (('State, 'T) -> 'State), state : 'State, array : 'T[])"
  types:
  - name: folder
    summary: 配列に対して折りたたむ関数。
    isFunction: true
    input:
      types:
      - uid: "'State"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - uid: "'State"
        isLocal: true
  - name: state
    summary: フォルダーの初期状態です。
    uid: "'State"
    isLocal: true
  - name: array
    summary: 折りたたむ値の配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'State"
  types:
  - summary: '`array`のすべての要素を反復処理した後に、フォルダーによって返される最終的な状態。'
    uid: "'State"
    isLocal: true
typeParameters:
- uid: "'State"
  summary: '`folder` 関数が動作する状態の種類。つまり、を最初の引数として受け取り、を返します。'
- uid: "'T"
  summary: '`array` 要素の型。'
metadata:
  ms.openlocfilehash: 4be4752029b10351cfb3fe0fa6aa61b84b157510
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73214352"
