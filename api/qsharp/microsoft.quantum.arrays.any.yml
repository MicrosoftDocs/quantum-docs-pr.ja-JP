### YamlMime:QSharpType
uid: microsoft.quantum.arrays.any
name: Any
type: function
namespace: Microsoft.Quantum.Arrays
summary: 配列と、配列の要素に対して定義された述語が指定されている場合、配列の少なくとも1つの要素が述語を満たすかどうかを確認します。
remarks: "関数は、ジェネリック型に対して定義されます。つまり、配列`'T[]`と関数`predicate: 'T -> Bool`がある場合は、 `Bool`一部の要素が満たさ`predicate`れるかどうかを示す値を生成できます。"
examples: >-
  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function IsThreePresent() : Bool {
      let arrayOfInts = [1, 2, 3, 4, 5];
      let is3Present = IsNumberPresentInArray(3, arrayOfInts);
      return is3Present;
  }


  function IsNumberPresentInArray(n : Int, array : Int[]) : Bool {
      return Any(EqualI(_, n), array);
  }

  ```
syntax: "function Any (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: 要素のチェック`'T`に`Bool`使用されるからへの関数。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: 上`'T`の要素の配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: すべて`Bool`の要素に適用される述語の関数または関数の値。
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: 要素の`array`型。
metadata:
  ms.openlocfilehash: 4e80b5c39c83bc5d5b26d4df9ca86b8cbc796aeb
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82676559"
