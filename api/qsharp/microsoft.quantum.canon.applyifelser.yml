### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyifelser
name: ApplyIfElseR
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  古典的な結果の値に応じて、2つの操作のいずれかを適用します。


  結果 `result`が指定された場合、`result` が `Zero`である場合は `zeroInput` と共に操作 `zeroOp` を入力として適用し、`oneOp(oneInput)` 時に `result == One`を適用します。
syntax: "operation ApplyIfElseR (result : Result, (zeroOp : ('T => Unit), zeroInput : 'T), (oneOp : ('U => Unit), oneInput : 'U)) : Unit"
input:
  content: "(result : Result, (zeroOp : ('T => Unit), zeroInput : 'T), (oneOp : ('U => Unit), oneInput : 'U))"
  types:
  - name: result
    summary: '`zeroOp` または `oneOp` が適用されているかどうかを判断するために使用される測定結果。'
    isPrimitive: true
    uid: Result
  - name: zeroOp
    summary: '`result == Zero`時に適用される操作。'
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: zeroInput
    summary: '`result == Zero`ときに `zeroOp` に提供される入力。'
    uid: "'T"
    isLocal: true
  - name: oneOp
    summary: '`result == One`時に適用される操作。'
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: oneInput
    summary: '`result == One`ときに `oneOp` に提供される入力。'
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 条件付きで適用する操作 `zeroOp` の入力型。
- uid: "'U"
  summary: 条件付きで適用する操作 `oneOp` の入力型。
seeAlso:
- microsoft.quantum.canon.applyifzero
- microsoft.quantum.canon.applyifone
- microsoft.quantum.canon.applyifelserc
- microsoft.quantum.canon.applyifelsera
- microsoft.quantum.canon.applyifelserca
metadata:
  ms.openlocfilehash: dc3c41c064297dfa3aef53362095c4d9f998538b
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73217429"
