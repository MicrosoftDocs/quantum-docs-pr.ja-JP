### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplyandaddbymodularinteger
name: MultiplyAndAddByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: >-
  Qubit レジスタに対して、モジュールの乗算および加算による整数定数を実行します。


  指定された剰余 $N $、定数乗数 $a $、および \ket{$y $ に対して、map $ $ \begin{align} \ket{x} \ket{b}/map\end{align} $ $ summand (b + a/cdot x) $ $ を実装します。
remarks: >-
  - 回路図と説明については、arXiv のページ7の図6を参照してください[: quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=7)

  - この操作は[Arxiv: quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf)の CMULT (a) MOD (N) に対応します。
syntax: 'operation MultiplyAndAddByModularInteger (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, summand : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Arithmetic.LittleEndian, summand : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: に関して、加算と乗算が行われる剰余 $N $。
    isPrimitive: true
    uid: Int
  - name: multiplier
    summary: の`summand`各 basis 状態ラベルに値を追加する符号なし整数を表すクォンタムレジスタ。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: summand
    summary: この操作のターゲットとして使用する符号なし整数を表すクォンタムレジスタ。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.multiplyandaddphasebymodularinteger
metadata:
  ms.openlocfilehash: 38efb2840406fc82b7ae24640bec6641f048a5b2
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82676744"
