### YamlMime:QSharpType
uid: microsoft.quantum.canon.operationpowc
name: OperationPowC
type: function
namespace: microsoft.quantum.canon
summary: >-
  操作を累乗します。

  修飾子は、 `C` 操作が制御可能であることを示します。


  つまり、ゲート $U $ を表す操作が指定されている場合は、power $m $ に対して ^ m $ $U 新しい操作を返します。
syntax: "function OperationPowC (op : ('T => Unit is Ctl), power : Int) : ('T => Unit is Ctl)"
input:
  content: "(op : ('T => Unit is Ctl), power : Int)"
  types:
  - name: op
    summary: 繰り返すゲートを表す $ $U 演算。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: power
    summary: $U $ を繰り返す回数を指定します。
    isPrimitive: true
    uid: Int
output:
  content: ('T => Unit is Ctl)
  types:
  - summary: $U ^ m $ を表す新しい操作 $m = \texttt{power} $。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
typeParameters:
- uid: "'T"
  summary: 電力を供給する操作の種類。
seeAlso:
- microsoft.quantum.canon.operationpow
metadata:
  ms.openlocfilehash: 7e787866975b179d08ca713e229c48634212cca0
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89355846"
