### YamlMime:QSharpType
uid: microsoft.quantum.simulation.quantumwalkbyqubitization
name: QuantumWalkByQubitization
type: function
namespace: Microsoft.Quantum.Simulation
summary: >-
  ブロックエンコードのリフレクションをクォンタムウォークに変換します。


  $W 対象`BlockEncodingReflection`の $H 演算子をエンコードする $U $ で表されるが指定されている場合は、$-pm e ^ {\ pm i\ sin ^{-1}(H)} $ の範囲を含むクォンタムウォーク $ に変換します。
syntax: 'function QuantumWalkByQubitization (blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
references: '- Hamiltonian シミュレーション Qubitization Guang Hao Low、Isaac L. 語https://arxiv.org/abs/1610.06546'
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection)'
  types:
  - name: blockEncoding
    uid: microsoft.quantum.simulation.blockencodingreflection
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: クォンタムウォーク $W $ はレジスタ`a`に対して共同`s`で動作し、$ $H-pm e ^ {\ pm i\ sin ^{-1}(H)} $ の範囲を含んでいます。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
metadata:
  ms.openlocfilehash: e2a6c0469b730140b8584e8cff2aad2d68254793
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82682498"
