### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
name: ObliviousAmplitudeAmplificationFromStatePreparation
type: function
namespace: microsoft.quantum.amplitudeamplification
summary: 部分的な反射のために oracles による振幅増幅を無関係します。
remarks: >-
  これにより、のような補助開始状態とターゲット状態の形式に対して、より厳密な条件が課さ `AmpAmpObliviousByReflectionPhases` れます。

  $A \ket {0} \_ f\ket {0} \_ A = \ket{\text{start}} \_ {fa} $ は、 \_ 計算ベース $ \ket f\ket $ から補助開始状態 $ \ket{\text{start}} {fa} $ を準備 {0} \_ {0} することを前提としています。

  ターゲットの状態が $ \ket f $ によってマークされていることを前提としてい {1} \_ ます。

  \Begin{align} O\ket {\ text {start}} \_ {fa} \ket{\psi} \_ s = \lambda\ket {1} \_ f\ket {\ text {すべて}} \_ a\ket {\ text {target}} \_ s U \ket{\psi} \_ s + \sqrt{1-| \ lambda | ^ 2} \ket \end{align}; {0} \_ (一部のユニタリ $U $) を想定しています。
syntax: 'function ObliviousAmplitudeAmplificationFromStatePreparation (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int)'
  types:
  - name: phases
    summary: 部分的な反射のフェーズ
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateOracle
    summary: 補助開始状態を準備する oracle $A $ のユニタリ
    uid: microsoft.quantum.oracles.deterministicstateoracle
  - name: signalOracle
    summary: '`ObliviousOracle`補助レジスタとシステムレジスタに共同で動作する型の、oracle $O $ のユニタリ'
    uid: microsoft.quantum.oracles.obliviousoracle
  - name: idxFlagQubit
    summary: シングル qubit フラグ登録のインデックス
    isPrimitive: true
    uid: Int
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: 部分的な反射に基づいて無関係の振幅増幅を実装する操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: 9c4bedaffafdbe0c7dfdda6a4a6ec3ded4a69bfd
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89340376"
