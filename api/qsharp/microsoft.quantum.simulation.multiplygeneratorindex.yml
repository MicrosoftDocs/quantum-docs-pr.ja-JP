### YamlMime:QSharpType
uid: microsoft.quantum.simulation.multiplygeneratorindex
name: MultiplyGeneratorIndex
type: function
namespace: microsoft.quantum.simulation
summary: 内の係数を乗算 `GeneratorIndex` します。
examples: >-
  ```qsharp

  let gen = GeneratorIndex(([1,2,3],[coeff]),[1,2,3]);

  let ((idxPaulis, idxDoubles), idxQubits) = MultiplyGeneratorIndex(multiplier, gen);

  // idxDoubles[0] == multiplier * coeff;

  ```
syntax: 'function MultiplyGeneratorIndex (multiplier : Double, generatorIndex : Microsoft.Quantum.Simulation.GeneratorIndex) : Microsoft.Quantum.Simulation.GeneratorIndex'
input:
  content: '(multiplier : Double, generatorIndex : Microsoft.Quantum.Simulation.GeneratorIndex)'
  types:
  - name: multiplier
    summary: 係数の乗数。
    isPrimitive: true
    uid: Double
  - name: generatorIndex
    summary: 乗算する `GeneratorIndex`。
    uid: microsoft.quantum.simulation.generatorindex
output:
  content: Microsoft.Quantum.Simulation.GeneratorIndex
  types:
  - summary: 係数が係数 `GeneratorIndex` である用語を表す `multiplier` 。
    uid: microsoft.quantum.simulation.generatorindex
seeAlso:
- microsoft.quantum.canon.generatorindex
metadata:
  ms.openlocfilehash: a39adc439e4e7712458695869296aaefff4760b9
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89329768"
