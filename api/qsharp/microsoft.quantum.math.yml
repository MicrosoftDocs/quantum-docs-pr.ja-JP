### YamlMime:QSharpNamespace
functions:
- summary: 型の複素数の絶対値を返し `Complex` ます。
  uid: Microsoft.Quantum.Math.AbsComplex
- summary: 型の複素数の絶対値を返し `ComplexPolar` ます。
  uid: Microsoft.Quantum.Math.AbsComplexPolar
- summary: 倍精度浮動小数点数の絶対値を返します。
  uid: Microsoft.Quantum.Math.AbsD
- summary: 整数の絶対値を返します。
  uid: Microsoft.Quantum.Math.AbsI
- summary: 大きい整数の絶対値を返します。
  uid: Microsoft.Quantum.Math.AbsL
- summary: 型の複素数の2乗の絶対値を返し `Complex` ます。
  uid: Microsoft.Quantum.Math.AbsSquaredComplex
- summary: 型の複素数の2乗の絶対値を返し `ComplexPolar` ます。
  uid: Microsoft.Quantum.Math.AbsSquaredComplexPolar
- summary: 値のビットサイズを再帰的に計算するために使用されるヘルパー関数です。
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeI
- summary: 値のビットサイズを再帰的に計算するために使用されるヘルパー関数です。
  uid: Microsoft.Quantum.Math.AccumulatedBitsizeL
- summary: コサインが指定数となる角度を返します。
  uid: Microsoft.Quantum.Math.ArcCos
- summary: 数値の逆双曲線余弦を計算します。
  uid: Microsoft.Quantum.Math.ArcCosh
- summary: サインが指定数となる角度を返します。
  uid: Microsoft.Quantum.Math.ArcSin
- summary: 数値の逆双曲線正弦を計算します。
  uid: Microsoft.Quantum.Math.ArcSinh
- summary: タンジェントが指定数となる角度を返します。
  uid: Microsoft.Quantum.Math.ArcTan
- summary: タンジェントが 2 つの指定された数の商である角度を返します。
  uid: Microsoft.Quantum.Math.ArcTan2
- summary: 数値の逆双曲線正接を計算します。
  uid: Microsoft.Quantum.Math.ArcTanh
- summary: 型の複素数のフェーズを返し `Complex` ます。
  uid: Microsoft.Quantum.Math.ArgComplex
- summary: 型の複素数のフェーズを返し `ComplexPolar` ます。
  uid: Microsoft.Quantum.Math.ArgComplexPolar
- summary: >-
    負でない整数の場合 `a` 、はを表すために必要なビット数を返し `a` ます。

    つまり、$a < 2 ^ n $ である $n $ の最小値を返します。
  uid: Microsoft.Quantum.Math.BitSizeI
- summary: >-
    負でない整数の場合 `a` 、はを表すために必要なビット数を返し `a` ます。

    つまり、$a < 2 ^ n $ である $n $ の最小値を返します。
  uid: Microsoft.Quantum.Math.BitSizeL
- summary: 指定した数以上の数のうち、最小の整数を返します。
  uid: Microsoft.Quantum.Math.Ceiling
- summary: 複素数型の複素数を `Complex` 型の複素数に変換 `ComplexPolar` します。
  uid: Microsoft.Quantum.Math.ComplexAsComplexPolar
- summary: 複素数型の複素数を `ComplexPolar` 型の複素数に変換 `Complex` します。
  uid: Microsoft.Quantum.Math.ComplexPolarAsComplex
- summary: に最も近い `fraction` 、分母が以下である継続分数の値を検索します。 `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentI
- summary: に最も近い `fraction` 、分母が以下である継続分数の値を検索します。 `denominatorBound`
  uid: Microsoft.Quantum.Math.ContinuedFractionConvergentL
- summary: 指定された角度のコサインを返します。
  uid: Microsoft.Quantum.Math.Cos
- summary: 指定された角度のハイパーボリック コサインを返します。
  uid: Microsoft.Quantum.Math.Cosh
- summary: 1つの BigInteger 値を別の値で除算し、その結果と剰余をタプルとして返します。
  uid: Microsoft.Quantum.Math.DivRemL
- summary: 2つの入力の商を返します。
  uid: Microsoft.Quantum.Math.DividedByC
- summary: 2つの入力の商を返します。
  uid: Microsoft.Quantum.Math.DividedByCP
- summary: 2つの入力の商を返します。
  uid: Microsoft.Quantum.Math.DividedByD
- summary: 2つの入力の商を返します。
  uid: Microsoft.Quantum.Math.DividedByI
- summary: 2つの入力の商を返します。
  uid: Microsoft.Quantum.Math.DividedByL
- summary: 自然対数の底 $e $ を返します。
  uid: Microsoft.Quantum.Math.E
- summary: 指定した指数で累乗された $e $ を返します。
  uid: Microsoft.Quantum.Math.ExpD
- summary: 指定された剰余に関して、指定された指数で累乗された整数を返します。
  uid: Microsoft.Quantum.Math.ExpModI
- summary: 指定された剰余に関して、指定された指数で累乗された整数を返します。
  uid: Microsoft.Quantum.Math.ExpModL
- summary: $U \ cdot a + v/cdot b = \ 演算子 name{gcd} (a, b) $ のようなタプル $ (u, v) $ を計算します。 $-演算子名 {gcd} $ は、$a $ および $b $ の最も一般的な除数 $a です。 GCD は常に正の数値です。
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorI
- summary: $U \ cdot a + v/cdot b = \ 演算子 name{gcd} (a, b) $ のようなタプル $ (u, v) $ を計算します。 $-演算子名 {gcd} $ は、$a $ および $b $ の最も一般的な除数 $a です。 GCD は常に正の数値です。
  uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorL
- summary: 指定した数値以下の最大の整数が返されます。
  uid: Microsoft.Quantum.Math.Floor
- summary: $A $ と $b $ の最大公約数を計算します。 GCD は常に正の数値です。
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorI
- summary: $A $ と $b $ の最大公約数を計算します。 GCD は常に正の数値です。
  uid: Microsoft.Quantum.Math.GreatestCommonDivisorL
- summary: 指定した数を別の指定数で除算した結果の剰余を返します。
  uid: Microsoft.Quantum.Math.IEEERemainder
- summary: は $ $b を返します。この場合、$a \ cdot b = 1 (\texttt{modulus}) $ となります。
  uid: Microsoft.Quantum.Math.InverseModI
- summary: は $ $b を返します。この場合、$a \ cdot b = 1 (\texttt{modulus}) $ となります。
  uid: Microsoft.Quantum.Math.InverseModL
- summary: $A $ と $b $ が共存している場合は true、それ以外の場合は false を返します。
  uid: Microsoft.Quantum.Math.IsCoprimeI
- summary: $A $ と $b $ が共存している場合は true、それ以外の場合は false を返します。
  uid: Microsoft.Quantum.Math.IsCoprimeL
- summary: 数値の底2の対数を計算します。
  uid: Microsoft.Quantum.Math.Lg
- summary: 指定された数値の自然 (底 $e $) 対数を返します。
  uid: Microsoft.Quantum.Math.Log
- summary: 指定した数の底 10 の対数を返します。
  uid: Microsoft.Quantum.Math.Log10
- summary: 2の自然対数を返します。
  uid: Microsoft.Quantum.Math.LogOf2
- summary: 整数の配列を指定すると、は最大の要素を返します。
  uid: Microsoft.Quantum.Math.Max
- summary: 指定された 2 つの数のうち、大きい方を返します。
  uid: Microsoft.Quantum.Math.MaxD
- summary: 指定された 2 つの数のうち、大きい方を返します。
  uid: Microsoft.Quantum.Math.MaxI
- summary: 指定された 2 つの数のうち、大きい方を返します。
  uid: Microsoft.Quantum.Math.MaxL
- summary: 整数の配列を指定すると、は最小の要素を返します。
  uid: Microsoft.Quantum.Math.Min
- summary: 指定した2つの数値のうち、小さい方を返します。
  uid: Microsoft.Quantum.Math.MinD
- summary: 指定した2つの数値のうち、小さい方を返します。
  uid: Microsoft.Quantum.Math.MinI
- summary: 指定した2つの数値のうち、小さい方を返します。
  uid: Microsoft.Quantum.Math.MinL
- summary: 2つの入力の差を返します。
  uid: Microsoft.Quantum.Math.MinusC
- summary: 2つの入力の差を返します。
  uid: Microsoft.Quantum.Math.MinusCP
- summary: 2つの入力の差を返します。
  uid: Microsoft.Quantum.Math.MinusD
- summary: 2つの入力の差を返します。
  uid: Microsoft.Quantum.Math.MinusI
- summary: 2つの入力の差を返します。
  uid: Microsoft.Quantum.Math.MinusL
- summary: 別の数値に対する数値の剰余を返します。
  uid: Microsoft.Quantum.Math.ModI
- summary: 別の数値に対する数値の剰余を返します。
  uid: Microsoft.Quantum.Math.ModL
- summary: 別の数値のべき乗で累乗された数値でモジュール分割を実行します。
  uid: Microsoft.Quantum.Math.ModPowL
- summary: 剰余の正規の residue を計算 `value` `modulus` します。
  uid: Microsoft.Quantum.Math.ModulusI
- summary: 剰余の正規の residue を計算 `value` `modulus` します。
  uid: Microsoft.Quantum.Math.ModulusL
- summary: 入力の単項否定を返します。
  uid: Microsoft.Quantum.Math.NegationC
- summary: 入力の単項否定を返します。
  uid: Microsoft.Quantum.Math.NegationCP
- summary: 入力の単項否定を返します。
  uid: Microsoft.Quantum.Math.NegationD
- summary: 入力の単項否定を返します。
  uid: Microsoft.Quantum.Math.NegationI
- summary: 入力の単項否定を返します。
  uid: Microsoft.Quantum.Math.NegationL
- summary: 定数 (π) を指定して、円の直径に対する円周の割合を表します。
  uid: Microsoft.Quantum.Math.PI
- summary: >-
    `L(p)`のベクトルの基準を返し `Double` ます。

    つまり、$ $x 型の $ が指定されている場合、 `Double[]` $-$p $ \| x \| \_ p = (\ sum_ {j} | x_j | ^ {p}) ^ {1/p} $ が返されます。
  uid: Microsoft.Quantum.Math.PNorm
- summary: >-
    標準でのベクトルを正規化 `Double` `L(p)` します。

    つまり、$ $x 型の配列を指定すると、 `Double[]` すべての要素が $p $-基準 $ x _p $ で除算された配列が返され \| \| ます。
  uid: Microsoft.Quantum.Math.PNormalized
- summary: 2つの入力の合計 (連結) を返します。
  uid: Microsoft.Quantum.Math.PlusA
- summary: 2つの入力の合計を返します。
  uid: Microsoft.Quantum.Math.PlusC
- summary: 2つの入力の合計を返します。
  uid: Microsoft.Quantum.Math.PlusCP
- summary: 2つの入力の合計を返します。
  uid: Microsoft.Quantum.Math.PlusD
- summary: 2つの入力の合計を返します。
  uid: Microsoft.Quantum.Math.PlusI
- summary: 2つの入力の合計を返します。
  uid: Microsoft.Quantum.Math.PlusL
- summary: 指定された指数で累乗された数値を返します。
  uid: Microsoft.Quantum.Math.PowC
- summary: 内部。 2つの複素数の累乗は、極座標形式で返されるデカルト形式で定義するのが最も簡単であるため、ここで定義し、必要に応じて変換します。
  uid: Microsoft.Quantum.Math.PowCAsCP
- summary: 指定された指数で累乗された数値を返します。
  uid: Microsoft.Quantum.Math.PowCP
- summary: 数値 x を指数で累乗した値を返します。
  uid: Microsoft.Quantum.Math.PowD
- summary: 指定された指数で累乗された数値を返します。
  uid: Microsoft.Quantum.Math.PowI
- summary: 指定された指数で累乗された数値を返します。
  uid: Microsoft.Quantum.Math.PowL
- summary: 2つの実数の間の剰余を計算します。
  uid: Microsoft.Quantum.Math.RealMod
- summary: 値を最も近い整数に丸めます。
  uid: Microsoft.Quantum.Math.Round
- summary: 数の符号を示す整数を返します。
  uid: Microsoft.Quantum.Math.SignD
- summary: 数の符号を示す整数を返します。
  uid: Microsoft.Quantum.Math.SignI
- summary: 数の符号を示す整数を返します。
  uid: Microsoft.Quantum.Math.SignL
- summary: 指定された角度のサインを返します。
  uid: Microsoft.Quantum.Math.Sin
- summary: 指定された角度のハイパーボリック サインを返します。
  uid: Microsoft.Quantum.Math.Sinh
- summary: 指定された数値の平方根を返します。
  uid: Microsoft.Quantum.Math.Sqrt
- summary: ベクターの2乗値を返します。
  uid: Microsoft.Quantum.Math.SquaredNorm
- summary: 指定された角度のタンジェントを返します。
  uid: Microsoft.Quantum.Math.Tan
- summary: 指定された角度のハイパーボリック タンジェントを返します。
  uid: Microsoft.Quantum.Math.Tanh
- summary: 2つの入力の積を返します。
  uid: Microsoft.Quantum.Math.TimesC
- summary: 2つの入力の積を返します。
  uid: Microsoft.Quantum.Math.TimesCP
- summary: 2つの入力の積を返します。
  uid: Microsoft.Quantum.Math.TimesD
- summary: 2つの入力の積を返します。
  uid: Microsoft.Quantum.Math.TimesI
- summary: 2つの入力の積を返します。
  uid: Microsoft.Quantum.Math.TimesL
- summary: 数値の整数部を計算します。
  uid: Microsoft.Quantum.Math.Truncate
- summary: バインドされたを使用して GCD を計算するための内部再帰呼び出し
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentI
- summary: バインドされたを使用して GCD を計算するための内部再帰呼び出し
  uid: Microsoft.Quantum.Math._ContinuedFractionConvergentL
- summary: GCD を計算するための内部再帰呼び出しです。
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorI
- summary: GCD を計算するための内部再帰呼び出しです。
  uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorL
name: Microsoft.Quantum.Math
newtypes:
- summary: フォームの有理数を表し `p/q` ます。 Integer `p` は組の最初の要素で、 `q` は組の2番目の要素です。
  uid: Microsoft.Quantum.Math.BigFraction
- summary: 実数部と虚数部の複素数を表します。 組の最初の要素は実際のコンポーネントで、2つ目は虚数部です。
  uid: Microsoft.Quantum.Math.Complex
- summary: >-
    極座標形式の複素数を表します。

    複素数の極座標表現は $c = r e ^ {i t} $ です。
  uid: Microsoft.Quantum.Math.ComplexPolar
- summary: フォームの有理数を表し `p/q` ます。 Integer `p` は組の最初の要素で、 `q` は組の2番目の要素です。
  uid: Microsoft.Quantum.Math.Fraction
operations:
- summary: >+
    > [!WARNING]

    > RandomInt は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Random.DrawRandomInt> を使用してください。

  uid: Microsoft.Quantum.Math.RandomInt
- summary: >+
    > [!WARNING]

    > RandomIntPow2 は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Random.DrawRandomInt> を使用してください。

  uid: Microsoft.Quantum.Math.RandomIntPow2
- summary: >+
    > [!WARNING]

    > RandomReal は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Random.DrawRandomDouble> を使用してください。

  uid: Microsoft.Quantum.Math.RandomReal
- summary: >+
    > [!WARNING]

    > RandomSingleQubitPauli は非推奨となりました。 代わりに、<xref:Microsoft.Quantum.Random.DrawRandomPauli> を使用してください。

  uid: Microsoft.Quantum.Math.RandomSingleQubitPauli
summary: この名前空間には、従来の数学関数とデータ型が含まれています。
uid: Microsoft.Quantum.Math
metadata:
  ms.openlocfilehash: 13ccb80ce78e7d9d6341d7b228e39b65026ab090
  ms.sourcegitcommit: 29e0d88a30e4166fa580132124b0eb57e1f0e986
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 10/27/2020
  ms.locfileid: "92723400"
