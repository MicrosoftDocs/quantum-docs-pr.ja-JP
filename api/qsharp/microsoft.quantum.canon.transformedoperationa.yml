### YamlMime:QSharpType
uid: microsoft.quantum.canon.transformedoperationa
name: TransformedOperationA
type: function
namespace: microsoft.quantum.canon
summary: 関数と操作が指定された場合、指定された関数によって入力が変換される新しい操作を返します。
examples: >-
  次の呼び出しでは、を使用して、入力用に設計された操作を、 @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" @"Microsoft.Quantum.Arithmetic.BigEndian" 型の入力を受け入れる操作に変換し @"Microsoft.Quantum.Arithmetic.LittleEndian" ます。


  ```qsharp

  let leOp = TransformedOperation(LittleEndianAsBigEndian, ApplyXorInPlaceBE);

  ```
syntax: "function TransformedOperationA (fn : ('U -> 'T), op : ('T => Unit is Adj)) : ('U => Unit is Adj)"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Adj))"
  types:
  - name: fn
    summary: 指定された入力を操作によって予期される形式に変換する関数。
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: 変換する操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: ('U => Unit is Adj)
  types:
  - summary: 新しい操作 tbat は、 `fn` 入力を使用してを呼び出し、その結果の出力をに渡し `op` ます。
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
seeAlso:
- transformedoperation
- transformedoperationc
- transformedoperationca
- applywithinputtransformation
- compose
metadata:
  ms.openlocfilehash: 4d31ea10e94294f7016619c546de76040b7ecadc
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89354945"
