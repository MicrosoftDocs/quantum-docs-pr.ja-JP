### YamlMime:QSharpNamespace
uid: microsoft.quantum.chemistry.jordanwigner
name: Microsoft.Quantum.Chemistry.JordanWigner
functions:
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerblockencodinggeneratorsystem
  summary: '`JWOptimizedHTerms` によって記述される Hamiltonian を、p Li `GeneratorIndex`の観点で表現された `GeneratorSystem` に変換します。'
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerclusteroperatorevolutionset
  summary: Dynamical generator を simulatable ゲートと JordanWigner ベースの拡張のセットとして表します。
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerclusteroperatorgeneratorsystem
  summary: '`JWOptimizedHTerms` によって記述される Hamiltonian を、このファイルで定義されている `GeneratorIndex` 規約に従って表される `GeneratorSystem` に変換します。'
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerfermionevolutionset
  summary: Dynamical generator を simulatable ゲートと JordanWigner ベースの拡張のセットとして表します。
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerfermionfunction
  summary: Dynamical generator を simulatable ゲートと JordanWigner ベースの拡張のセットとして表します。
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignergeneratorsystem
  summary: '`JWOptimizedHTerms` によって記述される Hamiltonian を、このファイルで定義されている `GeneratorIndex` 規約に従って表される `GeneratorSystem` に変換します。'
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedblockencodinggeneratorsystem
  summary: '`JWOptimizedHTerms` によって記述される Hamiltonian を、p Li `GeneratorIndex`の観点で表現された `GeneratorSystem` に変換します。'
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedqubitizationoracle
  summary: T-count で最適化された Qubitization 操作と、それを実行するために必要なパラメーターを返します。
- uid: microsoft.quantum.chemistry.jordanwigner.qubitizationoracle
  summary: Qubitization 操作と、それを実行するために必要なパラメーターを返します。
- uid: microsoft.quantum.chemistry.jordanwigner.trottersteporacle
  summary: Trotter step 操作と、それを実行するために必要なパラメーターを返します。
operations:
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbexy
  summary: $ (X ^ {z + 1}\_.Py ^ {z}\_p) Z\_{p-1}... に p Li 文字列を適用するユニタリ $U $...等価 $ on qubits $ 0.. p $ は、インデックス $z \\{0、1\}$、および $p $ に条件を付けます。 つまり、$ $ \begin{align} U\ket {z} \ k {p} \ k {\ psi} = \ket{z}\ket{p} (X ^ {z + 1}\_.Py ^ {z}\_p) Z\_{p-1}...Z_0\ket {\ psi} \end{align} $ $
- uid: microsoft.quantum.chemistry.jordanwigner.preparesingleconfigurationalstatesinglesiteoccupation
  summary: スピン orbitals を利用して、評価版の状態を簡単に準備
- uid: microsoft.quantum.chemistry.jordanwigner.preparesparsemulticonfigurationalstate
  summary: Excitations を初期評価版に追加することによって、評価版の複数のスパースな状態を準備します。
- uid: microsoft.quantum.chemistry.jordanwigner.preparetrialstate
  summary: ''
- uid: microsoft.quantum.chemistry.jordanwigner.prepareunitarycoupledclusterstate
  summary: インライン結合-評価状態のクラスター状態準備
- uid: microsoft.quantum.chemistry.jordanwigner.selectz
  summary: インデックス状態 $ \ket{p} $ に対して、qubits $p $ 条件付きで p Li $Z $ gate を適用する、$U のインデックス番号。 つまり、$ $ \begin{align} U\ket {p} \ k {\ psi} = \ket{p}Z\_p\ket {\ psi} \end{align} $ $
newtypes:
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerencodingdata
  summary: >-
    Hamiltonian シミュレーションのすべてのC#情報を表すために、から Q # に渡されるデータの形式。

    表されるデータの意味は、それを受け取るアルゴリズムによって決まります。
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerinputstate
  summary: 'からC# Q # に渡されるデータの形式は、初期状態の準備を表すために、表示されるデータの意味は、それを受け取るアルゴリズムによって決まります。'
- uid: microsoft.quantum.chemistry.jordanwigner.jwoptimizedhterms
  summary: >-
    Hamiltonian の用語を表すC#ためにから Q # に渡されるデータの形式。

    表されるデータの意味は、それを受け取るアルゴリズムによって決まります。
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbegeneratorsystem
  summary: 1番目の `Int` に含まれる用語の数と、`Double`内のすべての項係数の絶対値の合計と共に、整数 `n`を指定して、`n` 用語の `OptimizedBETermIndex` データを返す関数。
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbetermindex
  summary: 最適化されたブロックエンコードアルゴリズムの用語データ。
metadata:
  ms.openlocfilehash: d84c4f8bf74f902cdffc19dc7e489f80c63d7949
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73210935"
