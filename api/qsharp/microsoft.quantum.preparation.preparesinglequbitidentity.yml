### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparesinglequbitidentity
name: PrepareSingleQubitIdentity
type: operation
namespace: microsoft.quantum.preparation
summary: >-
  下回っ混合状態で qubit を準備します。


  Depolarizing channel $ $ \begin{align}/オメガ (\rho) \mathrel{を適用して、指定された qubit を $-bold done/$2 状態で準備します。 =} & lt ac {1} {4} \ sum_ {\ mu \ in \{ 0, 1, 2, 3 \} }-シグマ \_ {\rho} \_ ^ {-dagger}, \end{align} $ $ ここで、$ \rho \_ $ は混合状態を表す密度演算子で、$ $ は、混合の状態を表しています。 $i
remarks: >-
  混合状態 $ \ bold done/$2 では、この操作を状態に適用した結果を示していますが、この操作で行われたランダムな選択に対する期待値が暗黙的に記述されています。

  したがって、1つのアプリケーションでは、この操作によって純粋な状態が純粋な状態にマップされますが、想定どおりに動作します。

  具体的には、この操作をプロセス tomography で使用して、チャネルの *非 unital* コンポーネントを測定できます。
syntax: 'operation PrepareSingleQubitIdentity (qubit : Qubit) : Unit'
input:
  content: '(qubit : Qubit)'
  types:
  - name: qubit
    summary: 上で説明した方法で状態を depolarized する qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 53a8dfbd10ece5da90675fd48d5d9f149ddd7dfc
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91485483"
