### YamlMime:QSharpType
uid: microsoft.quantum.preparation.preparesinglequbitidentity
name: PrepareSingleQubitIdentity
type: operation
namespace: Microsoft.Quantum.Preparation
summary: >-
  下回っ混合状態で qubit を準備します。


  Depolarizing channel $ $ \begin{align}/オメガ (\rho) \mathrel{を適用して、指定された qubit を $-bold done/$2 状態で準備します。{1} {4} =} & lt ac \ sum_ \{{\ mu \ in 0,\}1, 2\_, 3}-シグマ {\rho\_} ^ {-dagger}, \end{align} $ $ ここで\_、$ \rho $ は混合状態を表す密度演算子で、$ $ は、混合の状態を表しています。 $i
remarks: >-
  混合状態 $ \ bold done/$2 では、この操作を状態に適用した結果を示していますが、この操作で行われたランダムな選択に対する期待値が暗黙的に記述されています。

  したがって、1つのアプリケーションでは、この操作によって純粋な状態が純粋な状態にマップされますが、想定どおりに動作します。

  具体的には、この操作をプロセス tomography で使用して、チャネルの*非 unital*コンポーネントを測定できます。
syntax: 'operation PrepareSingleQubitIdentity (qubit : Qubit) : Unit'
input:
  content: '(qubit : Qubit)'
  types:
  - name: qubit
    summary: 上で説明した方法で状態を depolarized する qubit。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: 4dd07e9e59575d60bca81c996ad5fc1a3a82b16d
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82686506"
