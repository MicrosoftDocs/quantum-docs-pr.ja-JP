### YamlMime:QSharpType
uid: microsoft.quantum.canon.iteratethroughcartesianpower
name: IterateThroughCartesianPower
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  整数範囲のデカルト乗の各インデックスに演算を適用します。


  `0..(bound - 1)`範囲のデカルト乗の各要素に対して操作を反復的に適用します。
examples: >-
  `op`操作を指定すると、次の2つのスニペットが同等になります。


  ```Q#

  IterateThroughCartesianPower(2, 3, op);

  ```


  ```Q#

  op([0, 0]);

  op([1, 0]);

  op([2, 0]);

  op([0, 1]);

  // ..

  op([2, 2]);

  ```
syntax: 'operation IterateThroughCartesianPower (power : Int, bound : Int, op : (Int[] => Unit)) : Unit'
input:
  content: '(power : Int, bound : Int, op : (Int[] => Unit))'
  types:
  - name: power
    summary: 範囲 `0..(bound - 1)` を発生させる必要があるデカルト指数。
    isPrimitive: true
    uid: Int
  - name: bound
    summary: 反復処理する範囲を指定します。範囲の長さとして指定します。
    isPrimitive: true
    uid: Int
  - name: op
    summary: 指定されたデカルト乗の各要素に対して呼び出される操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Int
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.canon.iteratethroughcartesianproduct
metadata:
  ms.openlocfilehash: 4679e1b569dab167eecbb22947543ab993d7fa8d
  ms.sourcegitcommit: ca5015fed409eaf0395a89c2e4bc6a890c360aa2
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 01/29/2020
  ms.locfileid: "76870939"
