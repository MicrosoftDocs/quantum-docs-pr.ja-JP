### YamlMime:QSharpType
uid: microsoft.quantum.random.transformedcontinuousdistribution
name: TransformedContinuousDistribution
type: function
namespace: microsoft.quantum.random
summary: 連続分布の場合は、指定された関数によって元のを変換する新しい分布を返します。
examples: >-
  次の2つのディストリビューションは同じです。


  ```Q#

  let dist1 = ContinuousUniformDistribution(1.0, 2.0);

  let dist2 = TransformedContinuousDistribution(
      PlusD(1.0, _),
      ContinuousUniformDistribution(0.0, 1.0)
  );

  ```
syntax: 'function TransformedContinuousDistribution (transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution) : Microsoft.Quantum.Random.ContinuousDistribution'
input:
  content: '(transform : (Double -> Double), distribution : Microsoft.Quantum.Random.ContinuousDistribution)'
  types:
  - name: transform
    summary: 元の分布の可変数を変換された分布に変換する関数。
    isFunction: true
    input:
      types:
      - isPrimitive: true
        uid: Double
    output:
      types:
      - isPrimitive: true
        uid: Double
  - name: distribution
    summary: 変換する元の分布。
    uid: microsoft.quantum.random.continuousdistribution
output:
  content: Microsoft.Quantum.Random.ContinuousDistribution
  types:
  - summary: によって指定された変換によってに関連する新しい分布 `distribution` `transform` 。
    uid: microsoft.quantum.random.continuousdistribution
metadata:
  ms.openlocfilehash: 4a0b4aed81006ef8770f159cb274c046ae208130
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91465645"
