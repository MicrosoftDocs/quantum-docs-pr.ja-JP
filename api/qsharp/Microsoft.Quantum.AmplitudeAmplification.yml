### YamlMime:QSharpNamespace
uid: microsoft.quantum.amplitudeamplification
name: Microsoft.Quantum.AmplitudeAmplification
summary: " # <a name=\"summary\"></a>まとめ\n この名前空間には、振幅増幅を実行するための関数と操作が含まれています。\n\n # <a name=\"description\"></a>説明\n 無関係の部分反射を使用した振幅増幅は、ここで実装されている振幅増幅の最も一般的な形式です。\n\n これは、操作 AmpAmpObliviousByReflectionPhases を通じて呼び出されます。\n\n これには、との2つのレジスタがあり `ancillaRegister` `systemRegister` ます。\n\n これは `ReflectionOracle` 、レジスタにのみ作用する型の反射に対して、2つの oracles を受け入れ `ancillaRegister` ます。\n\n これは、 `ObliviousOracle` 両方のレジスタに共同で動作する、型の無関係の特殊な振幅増幅を許可します。\n\n への入力状態は、 `ancillaRegister` 最初のリフレクション演算子 $I-2 \\ k {s} \\ bra {s} $ という一意の $-$1 eigenstate と想定されます。\n\n ターゲットクォンタムの状態に関する反射は、多くの場合、計算ベース $ \\ket{0\\cdots 0} $ からその状態を準備する oracle へのアクセスを前提として実装されます。\n\n これらの oracles の規則では、2つのレジスタが必要です。1つはシングル qubit レジスタ、もう1つはフロントシャー `flagQubit` ドレジスタレジスタに登録します。\n\n 型の oracle は、 `StateOracle` 両方のレジスタに共同で動作し、レジスタ内の $ \\ket $ によってフラグが設定されたターゲット状態を、 {1} `flagQubit` いくつかの実際の振幅で作成します。\n\n `ReflectionOracle`このフラグの状態に関するリフレクションは、操作によって生成され `TargetStateReflectionOracle` ます。\n\n への `ReflectionOracle` 入力状態に関するリフレクション `ancillaRegister` は、を反転することによって生成され、$ \\ket{0\\cdots 0} $ と ReflectionStart () を反映します。\n\n 型の oracle は、 `DeterministicStateOracle` レジスタに対して動作し、 `qubitState` フラグなしでターゲットの状態を正確に作成します。\n\n `AmpAmpObliviousByOraclePhases` は、反射ではなく oracles とを受け入れる無関係の振幅増幅のバージョンです `StateOracle` `ObliviousOracle` 。\n\n 振幅増幅は特殊なケースで、無関係の振幅増幅であることに注意してください。 `ObliviousOracle` は id 演算子で、システム qubits は存在しません。つまり、 `systemRegister` は空です。\n\n これは、操作とを通じて呼び出され `AmpAmByReflectionPhases` `AmpAmpByOraclePhases` ます。\n\n Grover search の標準的なケースでの部分的な反射のフェーズは、AmpAmpPhasesStandard 関数によって提供されます。\n\n たとえば、AmpAmpByOracle >-> AmpAmpObliviousByOraclePhases-> AmpAmpObliviousByReflectionPhases という依存関係があります。"
functions:
- uid: microsoft.quantum.amplitudeamplification.ampampbyoracle
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpByOracle は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.standardamplitudeamplification\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.standardamplitudeamplification\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampbyoraclephases
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpByOraclePhases は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampbyreflectionphases
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpByReflectionPhases は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampobliviousbyoraclephases
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpObliviousByOraclePhases は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampobliviousbyreflectionphases
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpObliviousByReflectionPhases は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampphasesfixedpoint
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpPhasesFixedPoint は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.fixedpointreflectionphases\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.fixedpointreflectionphases\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampampphasesstandard
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpPhasesStandard は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.standardreflectionphases\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.standardreflectionphases\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.ampamprotationtoreflectionphases
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpRotationToReflectionPhases は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections
  summary: 部分的な反射による振幅増幅。
- uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation
  summary: 部分的な反射のための oracles による振幅増幅。
- uid: microsoft.quantum.amplitudeamplification.fixedpointreflectionphases
  summary: 固定小数点の振幅増幅の部分的なリフレクションフェーズを計算します。
- uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections
  summary: 部分的な反射にを指定して、無関係の振幅増幅を実装するユニタリを返します。
- uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
  summary: 部分的な反射のために oracles による振幅増幅を無関係します。
- uid: microsoft.quantum.amplitudeamplification.reflectionstart
  summary: 振幅増幅に対する一般的な入力状態である、すべてゼロの string | 0... 0 〉に関する反射を構築します。
- uid: microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases
  summary: シングル qubit 回転として指定されたフェーズを部分反射として指定されたフェーズに変換します。
- uid: microsoft.quantum.amplitudeamplification.standardamplitudeamplification
  summary: 標準の振幅増幅アルゴリズム
- uid: microsoft.quantum.amplitudeamplification.standardreflectionphases
  summary: 標準の振幅増幅の部分的なリフレクションフェーズを計算します。
- uid: microsoft.quantum.amplitudeamplification.targetstatereflectionoracle
  summary: >-
    `ReflectionOracle`フラグ qubit で一意にマークされたターゲット状態に関するを構築します。


    ターゲット状態では、1つの qubit が1に設定され、それ以外の場合は 0: $ \ket {1} _f $ になります。
operations:
- uid: microsoft.quantum.amplitudeamplification.ampamprusbyoracle
  summary: "\n> [!WARNING]\n> 非推奨\n\nAmpAmpRUSByOracle は非推奨となりました。 代わりに、@\"microsoft.quantum.amplitudeamplification.applyfixedpointamplification\" を使用してください。\n@\"microsoft.quantum.amplitudeamplification.applyfixedpointamplification\" を使用してください。"
- uid: microsoft.quantum.amplitudeamplification.applyamplitudeamplification
  summary: 指定された一連のフェーズと oracles を使用して、指定されたレジスタに振幅増幅を適用し、初期状態と最終状態を反映します。
- uid: microsoft.quantum.amplitudeamplification.applyfixedpointamplification
  summary: 固定小数点振幅増幅アルゴリズム
- uid: microsoft.quantum.amplitudeamplification.applyobliviousamplitudeamplification
  summary: 部分的な反射を指定することによって、振幅増幅を無関係します。
newtypes:
- uid: microsoft.quantum.amplitudeamplification.reflectionphases
  summary: 振幅増幅での部分的な反射のシーケンスのフェーズ。
- uid: microsoft.quantum.amplitudeamplification.rotationphases
  summary: 振幅増幅での単一 qubit 回転のシーケンスのフェーズ。
metadata:
  ms.openlocfilehash: c64b38175c55e3f71f0746d9a7e65ea5e78b7383
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89341345"
