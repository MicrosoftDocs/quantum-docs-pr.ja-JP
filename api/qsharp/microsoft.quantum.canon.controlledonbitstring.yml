### YamlMime:QSharpType
uid: microsoft.quantum.canon.controlledonbitstring
name: ControlledOnBitString
type: function
namespace: microsoft.quantum.canon
summary: >-
  制御レジスタの状態が指定したビットマスクに対応する場合に、ターゲットレジスタに oracle を適用する、ユニタリ操作を返します。


  この関数の出力は、\begin{align} U \ket{b_0 b_1/cドット b_ {n-1}} \ket{\psi} = \ket{b_0 b_1 \ cドット b_ {n-1}} という $U の、単位の変換で表すことができる演算です。 \ otimes \begin{cases} V \ket{\psi} & \t extrm{if} (b_0 b_1 \ cドット b_ {n-1}) = \texttt{bits} \\ \\ \ket{\psi} & \textrm{otherwise} \end{cases}, \end{align} ここで $V $ は、操作のアクションを表すミリ秒変換です `oracle` 。
remarks: >-
  によって指定されたパターンは `bits` よりも短い場合があります `controlRegister` 。この場合、追加の制御 qubits は無視されます (つまり、$ \ket $ と $ \ket $ で制御されません {0} {1} )。

  `bits`がより長い場合は `controlRegister` 、エラーが発生します。


  ブール型の配列と1つの値を指定する `bits` と、 `oracle` この関数の出力は、次の手順を実行する操作になります。


  * `X`の要素に対応する制御レジスタの各 qubit に操作を適用 `false` し `bits` ます。

  * `Controlled oracle`コントロールとターゲットレジスタに適用します。

  * コントロールレジスタを `X` `false` `bits` 元の状態に戻すために、の要素に対応する各 qubit に操作を適用します。


  ファンクタの出力 `Controlled` は、 `ControlledOnBitString` `bits` がと等しい特殊なケースです `[true, ..., true]` 。
examples: >-
  次のコードスニペットは同等です。


  ```qsharp

  (ControlledOnBitString(bits, oracle))(controlRegister, targetRegister);

  ```


  および


  ```qsharp

  within {
      ApplyPauliFromBitString(PauliX, false, bits, controlRegister);
  } apply {
      Controlled oracle(controlRegister, targetRegister);
  }

  ```


  次のコードでは、状態 $ \ frac {1} {2} (\ket {00} -\ket {01} + \ket {10} + \ket) $ {11} を準備します。


  ```qsharp

  using (register = Qubit[2]) {
      ApplyToEach(H, register);
      (ControlledOnBitString([false], Z))(register[0..0], register[1]);
  }

  ```
syntax: "function ControlledOnBitString (bits : Bool[], oracle : ('T => Unit is Adj + Ctl)) : ((Qubit[], 'T) => Unit is Adj + Ctl)"
input:
  content: "(bits : Bool[], oracle : ('T => Unit is Adj + Ctl))"
  types:
  - name: bits
    summary: 指定されたユニタリ操作を制御するビット文字列。
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: oracle
    summary: ターゲットレジスタに適用されるユニタリ操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: ((Qubit[], 'T) => Unit is Adj + Ctl)
  types:
  - summary: '`oracle`コントロールのレジスタの状態がビットマスクに対応している場合に、ターゲットのレジスタに適用されるユニタリ操作 `bits` 。'
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
metadata:
  ms.openlocfilehash: a77aae7bcb7f7596398b4b9873ec33beb80a8098
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91471951"
