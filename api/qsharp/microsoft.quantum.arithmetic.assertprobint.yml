### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.assertprobint
name: AssertProbInt
type: operation
namespace: microsoft.quantum.arithmetic
summary: >-
  クォンタムレジスタの特定の状態の確率に予期される値があることをアサートします。


  $ \Ket{\psi} = \ sum ^ {2 ^ n-1} _ {j = 0} \ alpha_j \ket{j} $ という $n が指定されている場合、$j $ によってインデックスが作成された状態 $ \ket{j} $ の確率 $ | \ alpha_j | ^ 2 $ が予期される値であることをアサートします。
examples: >-
  このレジスタでは、 `qubits` 3-qubit クォンタムの状態 $ \ket{\psi} = \ sqrt {1/8} \ k {0} + \ sqrt {7/8} \ k {6} $ をリトルエンディアン形式でエンコードするとします。

  これは、番号が $ \ket {0} \equiv\ket {0} \ket {0} \ket {0} $ と $ \ket \equiv\ket \ket \ket $ {6} {0} {1} {1} であることを意味します。 その後、次のアサートは成功します。


  - `AssertProbInt(0,0.125,qubits,10e-10);`

  - `AssertProbInt(6,0.875,qubits,10e-10);`
syntax: 'operation AssertProbInt (stateIndex : Int, expected : Double, qubits : Microsoft.Quantum.Arithmetic.LittleEndian, tolerance : Double) : Unit'
input:
  content: '(stateIndex : Int, expected : Double, qubits : Microsoft.Quantum.Arithmetic.LittleEndian, tolerance : Double)'
  types:
  - name: stateIndex
    summary: レジスタによって表される状態 $ \ket{j} $ の $j $ のインデックス `LittleEndian` 。
    isPrimitive: true
    uid: Int
  - name: expected
    summary: 予期される値 $ | \ alpha_j | ^ 2 $。
    isPrimitive: true
    uid: Double
  - name: qubits
    summary: リトルエンディアン形式で $ \ket{\psi} $ を格納する qubit レジスタ。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: tolerance
    summary: 実際と予想される差に対する絶対許容値。
    isPrimitive: true
    uid: Double
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: e5269b46849da17602447491e77e756e999cb3d9
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89342331"
