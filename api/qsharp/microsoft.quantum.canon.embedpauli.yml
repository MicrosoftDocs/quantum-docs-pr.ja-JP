### YamlMime:QSharpType
uid: microsoft.quantum.canon.embedpauli
name: EmbedPauli
type: function
namespace: microsoft.quantum.canon
summary: Single qubit の P# li 演算子と qubit のインデックスが指定されている場合、そのインデックスの指定された単一の qubit 演算子と `PauliI` 他のすべてのインデックスで、マルチ qubit の P# li 演算子を返します。
examples: >-
  配列を取得するには、次のようにし `[PauliI, PauliI, PauliX, PauliI]` ます。


  ```qsharp

  EmbedPauli(PauliX, 2, 3);

  ```
syntax: 'function EmbedPauli (pauli : Pauli, location : Int, n : Int) : Pauli[]'
input:
  content: '(pauli : Pauli, location : Int, n : Int)'
  types:
  - name: pauli
    summary: 指定された場所に配置される単一の qubit の P# li 演算子。
    isPrimitive: true
    uid: Pauli
  - name: location
    summary: インデックス。ここで `output[location] == pauli` 、 `output` はこの関数の出力です。
    isPrimitive: true
    uid: Int
  - name: n
    summary: 返される配列の長さ。
    isPrimitive: true
    uid: Int
output:
  content: Pauli[]
  types:
  - isArray: true
    isPrimitive: true
    uid: Pauli
metadata:
  ms.openlocfilehash: a5a6dbabfe51f52da9eb63d23bfbf1cf7ee03370
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356373"
