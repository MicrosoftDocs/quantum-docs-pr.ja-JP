### YamlMime:QSharpNamespace
uid: microsoft.quantum.diagnostics
name: Microsoft.Quantum.Diagnostics
functions:
- uid: microsoft.quantum.diagnostics.allequalityfactb
  summary: ブール値の2つの配列が等しいことをアサートします。
- uid: microsoft.quantum.diagnostics.dumpmachine
  summary: 現在のターゲットコンピューターの状態をダンプします。
- uid: microsoft.quantum.diagnostics.dumpregister
  summary: 指定した qubits に関連付けられている現在のターゲットコンピューターの状態をダンプします。
- uid: microsoft.quantum.diagnostics.equalityfactb
  summary: クラシック Bool 変数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalityfactc
  summary: 複素数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalityfactcp
  summary: 複素数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalityfacti
  summary: クラシック Int 変数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalityfactl
  summary: 古典 BigInt 変数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalityfactr
  summary: 古典的な結果変数に予期される値があることをアサートします。
- uid: microsoft.quantum.diagnostics.equalitywithintolerancefact
  summary: 古典的な浮動小数点値が、指定された絶対許容範囲に最大の予測値を持つことを示す要求を表します。
- uid: microsoft.quantum.diagnostics.fact
  summary: クラシック条件が true であることを宣言します。
- uid: microsoft.quantum.diagnostics.nearequalityfactc
  summary: 古典的な複素数の値が、最小許容範囲である 1e-10 になるようにアサートします。
- uid: microsoft.quantum.diagnostics.nearequalityfactcp
  summary: 古典的な複素数の値が、最小許容範囲である 1e-10 になるようにアサートします。
- uid: microsoft.quantum.diagnostics.nearequalityfactd
  summary: 古典的な浮動小数点値が、最小の許容範囲 (1e-10) までの予測値を持つことをアサートします。
operations:
- uid: microsoft.quantum.diagnostics.assertallzero
  summary: 指定された qubits のアサートはすべて $ \ket{0}$ state です。
- uid: microsoft.quantum.diagnostics.assertallzerowithintolerance
  summary: 指定された qubits のアサートはすべて $ \ket{0}$ state で、指定された許容範囲になります。
- uid: microsoft.quantum.diagnostics.assertoperationsequalinplace
  summary: >-
    2つの操作を指定すると、すべての入力状態で同じ動作をするようにアサートされます。


    このアサーションは、フォームのすべての状態に対して操作のアクションをチェックすることによって実装されます $V (& o)... \ otimes V_ {n-1} $。ここで $V _k $ は、州 $ \ket{0}$、$ \ket{1}$、$ \ket{+} $、$ \ket{i} $ (+ 1 eigenstate of P# li Y operator) のいずれかです。


    このアサーションは $n $ qubits を使用し、比較対象の操作の複数の呼び出しを必要とします。
- uid: microsoft.quantum.diagnostics.assertoperationsequalinplacecompbasis
  summary: >-
    演算の `givenU` が、計算ベースのベクターに対してのみ操作の操作をチェックすることによって、指定した入力サイズに `expectedU` 操作と等しいかどうかを確認します。

    これは、2つの unitaries 等しいかどうかについて、十分ではなく、必要な条件です。
- uid: microsoft.quantum.diagnostics.assertoperationsequalreferenced
  summary: >-
    2つの操作を指定すると、すべての入力状態で同じ動作をするようにアサートされます。


    このアサーションは、Jamiłkowski isomorphism を使用することによって実装されます。このアサーションは、2つのありレジスタの qubit 状態アサーションのいずれかに軽減されます。

    このため、この操作では、テスト対象の各操作を1回だけ呼び出す必要がありますが、割り当てられる qubits は2倍必要です。

    このアサーションを使用して、最適化されたバージョンの操作がその単純な実装と同じように動作すること、またはクォンタム以外の入力の範囲に対して動作する操作が既知のケースと一致することを確認できます。
- uid: microsoft.quantum.diagnostics.assertqubit
  summary: Qubit `q` が、Pauli Z 演算子の予期される eigenstate にあることをアサートします。
- uid: microsoft.quantum.diagnostics.assertqubitisinstatewithintolerance
  summary: >-
    予期される状態の qubit をアサートします。


    `expected` は、$ \ket{\psi} = \begin{bmatrix}a & B\mathrm{T}} $ という複雑なベクトルを表します。

    各 $a $、$b $ を表す組の最初の要素は複素数の実数部ですが、2番目の要素は虚数部です。

    最後の引数は、アサーションが行われる許容範囲を定義します。
- uid: microsoft.quantum.diagnostics.assertqubitwithintolerance
  summary: Qubit `q` が、指定された許容範囲内の Pauli Z 演算子の予測される eigenstate 内にあることをアサートします。
newtypes:
- uid: microsoft.quantum.diagnostics.test
  summary: 単体テストをマークするために使用される、コンパイラが認識する属性。
summary: " # <a name=\"summary\"></a>Summary\n この名前空間には、アサート操作や要求関数など、診断の目的に役立つ関数と操作が含まれています。"
metadata:
  ms.openlocfilehash: a633a9555f380e6aa6c6701d277d026c58130ff2
  ms.sourcegitcommit: 27c9bf1aae923527aa5adeaee073cb27d35c0ca1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 12/05/2019
  ms.locfileid: "74858277"
