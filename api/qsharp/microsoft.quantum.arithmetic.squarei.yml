### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.squarei
name: SquareI
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: 整数 `xs` の2乗を `result`に計算します。最初はゼロである必要があります。
remarks: は、標準的なシフトアンド追加アプローチを使用して、正方形を計算します。 は、通常の乗数を適用してコピー操作を元に戻す前に、最初に xs をコピーする、ストレート転送ソリューションと比較して $n-$1 qubits を保存します。
syntax: 'operation SquareI (xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: $n $ ビットの数値を平方根 (LittleEndian)
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: $ 2n $ bit result (LittleEndian) は、初期状態では $ \ket{0}$ である必要があります。
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: ae55cd24a5dad065c010006f01484f7e903e76f6
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73218432"
