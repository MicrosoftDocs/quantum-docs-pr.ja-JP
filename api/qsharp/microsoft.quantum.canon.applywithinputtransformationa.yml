### YamlMime:QSharpType
uid: microsoft.quantum.canon.applywithinputtransformationa
name: ApplyWithInputTransformationA
type: operation
namespace: Microsoft.Quantum.Canon
summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
examples: >-
  次の呼び出しでは、@"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" を使用して、型 @"Microsoft.Quantum.Arithmetic.LittleEndian"の入力に対して @"Microsoft.Quantum.Arithmetic.BigEndian" 入力用に設計された操作を適用します。


  ```qsharp

  ApplyWithInputTransformation(LittleEndianAsBigEndian, ApplyXorInPlaceBE, LittleEndian(qubits));

  ```
syntax: "operation ApplyWithInputTransformationA (fn : ('U -> 'T), op : ('T => Unit is Adj), input : 'U) : Unit"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Adj), input : 'U)"
  types:
  - name: fn
    summary: 指定された入力を操作によって予期される形式に変換する関数。
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: 適用する操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: input
    summary: 関数への入力。
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
seeAlso:
- applywithinputtransformation
- applywithinputtransformationc
- applywithinputtransformationca
- transformedoperation
metadata:
  ms.openlocfilehash: 29b22fdff94be068341e94ad4c5f67303011a298
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73212669"
