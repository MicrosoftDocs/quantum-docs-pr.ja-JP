### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.dumpoperation
name: DumpOperation
type: operation
namespace: Microsoft.Quantum.Diagnostics
summary: 操作が指定された場合、現在の実行ターゲットで使用できるようになった操作に関する診断が表示されます。
remarks: >-
  この操作を呼び出すと、Q # 内からは観察可能な効果がありません。 表示されている正確な診断は、現在の実行ターゲットおよびエディター環境に依存しています。

  たとえば、完全な状態のクォンタムシミュレーターで使用する場合は、を表すために使用される、1つの単位の行列 `op` が表示されます。


  グローバルフェーズのあいまいさ (例: 完全な状態シミュレーター) を許可するシミュレーターで実行する場合、返される表現はグローバルフェーズによって異なる場合があることに注意してください。


  同様に、行と列の行列表現の順序は、この操作をサポートする各シミュレーターで使用される規則によって異なる場合があります。
examples: >-
  クォンタムシミュレーターのターゲットで実行すると、次のスニペットはマトリックス $ $ \begin{aligned} を出力します (\begin{matrix} 1 & 0 & 0 & 0 \\ \\ 0 & 0 & 0 & 1 \\ \\ 0 & 0 & 1 & 0 \\ \\ 0 & 1 & 0 & 0 \end{matrix}\right) \end{aligned}.

  $$


  ```Q#

  operation DumpCnot() : Unit {
      DumpOperation(2, ApplyToFirstTwoQubitsCA(CNOT, _));
  }

  ```
syntax: 'operation DumpOperation (nQubits : Int, op : (Qubit[] => Unit is Adj)) : Unit'
input:
  content: '(nQubits : Int, op : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: 指定された操作が動作する qubits の数。
    isPrimitive: true
    uid: Int
  - name: op
    summary: 診断される操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
metadata:
  ms.openlocfilehash: ba2e3c4dd42faa0919b5777a6db82ce787acb80a
  ms.sourcegitcommit: 75c4edc7c410cc63dc8352e2a5bef44b433ed188
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 08/25/2020
  ms.locfileid: "88864146"
