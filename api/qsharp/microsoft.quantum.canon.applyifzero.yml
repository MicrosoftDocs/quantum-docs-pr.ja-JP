### YamlMime:QSharpType
uid: microsoft.quantum.canon.applyifzero
name: ApplyIfZero
type: operation
namespace: microsoft.quantum.canon
summary: >-
  従来の結果値に対する条件付き操作を0に適用します。


  `op`がの場合、操作と結果の値がに適用され `result` `op` `target` `result` `Zero` ます。 `One`の場合、には何も起こりません `target` 。
syntax: "operation ApplyIfZero (result : Result, (op : ('T => Unit), target : 'T)) : Unit"
input:
  content: "(result : Result, (op : ('T => Unit), target : 'T))"
  types:
  - name: result
    summary: Op が適用されるかどうかを制御する測定結果。
    isPrimitive: true
    uid: Result
  - name: op
    summary: 条件付きで適用する操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: target
    summary: 操作が適用される入力。
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: 条件付きで適用される操作の入力型。
seeAlso:
- microsoft.quantum.canon.applyifzeroc
- microsoft.quantum.canon.applyifzeroa
- microsoft.quantum.canon.applyifzeroca
metadata:
  ms.openlocfilehash: 65a20b30d6b0330e870407f31ecb216e2e06cb29
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89358192"
