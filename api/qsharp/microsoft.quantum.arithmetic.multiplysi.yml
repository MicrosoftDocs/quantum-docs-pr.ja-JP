### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.multiplysi
name: MultiplySI
type: operation
namespace: microsoft.quantum.arithmetic
summary: 符号付き整数 `xs` を符号付き整数で乗算 `ys` し、結果をに格納し `result` ます。最初はゼロである必要があります。
syntax: 'operation MultiplySI (xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.SignedLittleEndian, ys : Microsoft.Quantum.Arithmetic.SignedLittleEndian, result : Microsoft.Quantum.Arithmetic.SignedLittleEndian)'
  types:
  - name: xs
    summary: n ビット被乗数 (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: ys
    summary: n ビット乗数 (SignedLittleEndian)
    uid: microsoft.quantum.arithmetic.signedlittleendian
  - name: result
    summary: 2n ビット結果 (SignedLittleEndian) は、初期状態では $ \ket $ である必要があり {0} ます。
    uid: microsoft.quantum.arithmetic.signedlittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
metadata:
  ms.openlocfilehash: 00ddd55c21334df5950b8c71392d593479e17944
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91476643"
