### YamlMime:QSharpType
uid: microsoft.quantum.canon.bounda
name: BoundA
type: function
namespace: microsoft.quantum.canon
summary: >-
  1つの入力に対して動作する操作の配列を指定すると、によって、指定された各操作を順番に実行する新しい操作が生成されます。

  修飾子は、 `A` 配列内のすべての操作が adjointable であることを示します。
examples: >-
  同等のものを次に示します。


  ```qsharp

  let bound = BoundA([U, V]);

  bound(x);

  ```


  and


  ```qsharp

  U(x); V(x);

  ```
syntax: "function BoundA (operations : ('T => Unit is Adj)[]) : ('T => Unit is Adj)"
input:
  content: "(operations : ('T => Unit is Adj)[])"
  types:
  - name: operations
    summary: 指定された入力に対して実行される一連の操作。
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: ('T => Unit is Adj)
  types:
  - summary: 入力に基づいて指定された各操作を順番に実行する新しい操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
typeParameters:
- uid: "'T"
  summary: 配列内の各操作が動作するターゲット。
seeAlso:
- microsoft.quantum.canon.bound
metadata:
  ms.openlocfilehash: d6dc7dbec4ee57956a243fcc5aa61be330d64fb9
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89356968"
