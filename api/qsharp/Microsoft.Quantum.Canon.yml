### YamlMime:QSharpNamespace
uid: microsoft.quantum.canon
name: Microsoft Quantum
functions:
- uid: microsoft.quantum.canon.asqubitarray
  summary: >-
    > [!WARNING]

    > 非推奨この関数は削除されました。
- uid: microsoft.quantum.canon.assertalmostequal
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.NearEqualityFactD" を使用してください。
- uid: microsoft.quantum.canon.assertalmostequaltol
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.EqualityWithinToleranceFact" を使用してください。
- uid: microsoft.quantum.canon.assertboolarrayequal
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.AllEqualityFactB" を使用してください。
- uid: microsoft.quantum.canon.assertboolequal
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.EqualityFactB" を使用してください。
- uid: microsoft.quantum.canon.assertintequal
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.EqualityFactI" を使用してください。
- uid: microsoft.quantum.canon.assertresultequal
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.EqualityFactR" を使用してください。
- uid: microsoft.quantum.canon.bigendiantolittleendian
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.BigEndianAsLittleEndian"を使用してください。
- uid: microsoft.quantum.canon.bind
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.bound"を使用してください。
- uid: microsoft.quantum.canon.binda
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.bounda"を使用してください。
- uid: microsoft.quantum.canon.bindc
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.boundc"を使用してください。
- uid: microsoft.quantum.canon.bindca
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.boundca"を使用してください。
- uid: microsoft.quantum.canon.bitsize
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.bitsizei"を使用してください。
- uid: microsoft.quantum.canon.boolarrfrompositiveint
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.intasboolarray"を使用してください。
- uid: microsoft.quantum.canon.boolarrfromresultarr
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.resultarrayasboolarray"を使用してください。
- uid: microsoft.quantum.canon.boolfromresult
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.resultasbool"を使用してください。
- uid: microsoft.quantum.canon.bound
  summary: 1つの入力に対して動作する操作の配列を指定すると、によって、指定された各操作を順番に実行する新しい操作が生成されます。
- uid: microsoft.quantum.canon.bounda
  summary: >-
    1つの入力に対して動作する操作の配列を指定すると、によって、指定された各操作を順番に実行する新しい操作が生成されます。

    修飾子 `A` は、配列内のすべての操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.boundc
  summary: >-
    1つの入力に対して動作する操作の配列を指定すると、によって、指定された各操作を順番に実行する新しい操作が生成されます。

    修飾子 `C` は、配列内のすべての操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.boundca
  summary: >-
    1つの入力に対して動作する操作の配列を指定すると、によって、指定された各操作を順番に実行する新しい操作が生成されます。

    修飾子 `CA` は、配列内のすべての操作が adjointable および制御可能であることを示します。
- uid: microsoft.quantum.canon.ccontrolled
  summary: 操作 op が指定された場合、は、従来の制御ビットが true の場合に op を適用する新しい操作を返します。 `false`した場合、何も起こりません。
- uid: microsoft.quantum.canon.ccontrolleda
  summary: >-
    操作 op が指定された場合、は、従来の制御ビットが true の場合に op を適用する新しい操作を返します。 `false`した場合、何も起こりません。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.ccontrolledc
  summary: >-
    操作 op が指定された場合、は、従来の制御ビットが true の場合に op を適用する新しい操作を返します。 `false`した場合、何も起こりません。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.ccontrolledca
  summary: >-
    操作 op が指定された場合、は、従来の制御ビットが true の場合に op を適用する新しい操作を返します。 `false`した場合、何も起こりません。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.compose
  summary: >-
    2つの関数の合成を生成します。


    つまり、$ および $g $ $f 2 つの関数を指定すると、$f-circ g $ を表す新しい関数が返されます。
- uid: microsoft.quantum.canon.conjugatedby
  summary: 外部操作と内部操作では、外部操作によって内部操作を活用する新しい操作が返されます。
- uid: microsoft.quantum.canon.conjugatedbya
  summary: 外部操作と内部操作では、外部操作によって内部操作を活用する新しい操作が返されます。
- uid: microsoft.quantum.canon.conjugatedbyc
  summary: 外部操作と内部操作では、外部操作によって内部操作を活用する新しい操作が返されます。
- uid: microsoft.quantum.canon.conjugatedbyca
  summary: 外部操作と内部操作では、外部操作によって内部操作を活用する新しい操作が返されます。
- uid: microsoft.quantum.canon.continuedfractionconvergent
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.continuedfractionconvergenti"を使用してください。
- uid: microsoft.quantum.canon.controlledonbitstring
  summary: 制御レジスタの状態が指定したビットマスクに対応する場合に、ターゲットレジスタに oracle を適用する、ユニタリ演算子を返します。
- uid: microsoft.quantum.canon.controlledonint
  summary: 制御レジスタの状態が指定した正の整数に対応する場合に、ターゲットレジスタに oracle を適用する、ユニタリ演算子を返します。
- uid: microsoft.quantum.canon.curriedop
  summary: >-
    2つの入力に対して、カリー化された操作のバージョンを返します。


    つまり、2つの入力を持つ演算が指定された場合、この関数は、isomorphism $f (x, y) \equiv f (x) (y) $ という値を適用して、1つの入力の操作を返す1つの入力の操作を返します。
- uid: microsoft.quantum.canon.curryop
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.curriedop"を使用してください。
- uid: microsoft.quantum.canon.decomposeintotimestepsca
  summary: 指定された操作に対して Trotter – Suzuki インテグレーターを実装する操作を返します。
- uid: microsoft.quantum.canon.delayed
  summary: 指定された引数を使用して指定された操作を適用する操作を返します。
- uid: microsoft.quantum.canon.delayeda
  summary: 指定された引数を使用して指定された操作を適用する操作を返します。
- uid: microsoft.quantum.canon.delayedc
  summary: 指定された引数を使用して指定された操作を適用する操作を返します。
- uid: microsoft.quantum.canon.delayedca
  summary: 指定された引数を使用して指定された操作を適用する操作を返します。
- uid: microsoft.quantum.canon.embedpauli
  summary: Single qubit の P# li 演算子と qubit のインデックスを指定した場合、は、そのインデックス位置にある指定された single qubit 演算子を持つマルチ qubit の P# li 演算子を返し、他のすべてのインデックスで `PauliI` します。
- uid: microsoft.quantum.canon.expmod
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.expmodi"を使用してください。
- uid: microsoft.quantum.canon.extendedgcd
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.extendedgreatestcommondivisori"を使用してください。
- uid: microsoft.quantum.canon.filter
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Filtered" を使用してください。
- uid: microsoft.quantum.canon.forall
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.All" を使用してください。
- uid: microsoft.quantum.canon.forany
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Any" を使用してください。
- uid: microsoft.quantum.canon.fst
  summary: ペアが指定されている場合、最初の要素を返します。
- uid: microsoft.quantum.canon.gcd
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.greatestcommondivisori"を使用してください。
- uid: microsoft.quantum.canon.ignore
  summary: 演算または関数の出力を無視します。
- uid: microsoft.quantum.canon.intabs
  summary: >-
    > [!WARNING]

    > 非推奨この関数は削除されました。
- uid: microsoft.quantum.canon.intarrayfromrange
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.rangeasintarray"を使用してください。
- uid: microsoft.quantum.canon.intmax
  summary: >-
    > [!WARNING]

    > 非推奨この関数は削除されました。
- uid: microsoft.quantum.canon.inversemod
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.inversemodi"を使用してください。
- uid: microsoft.quantum.canon.iscoprime
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.greatestcommondivisori"を使用してください。
- uid: microsoft.quantum.canon.isresultone
  summary: 指定された結果値が `One`と等しいかどうかをテストします。
- uid: microsoft.quantum.canon.isresultzero
  summary: 指定された結果値が `Zero`と等しいかどうかをテストします。
- uid: microsoft.quantum.canon.littleendiantobigendian
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian"を使用してください。
- uid: microsoft.quantum.canon.map
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Mapped" を使用してください。
- uid: microsoft.quantum.canon.mapindex
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.MappedByIndex" を使用してください。
- uid: microsoft.quantum.canon.modulus
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.modulusi"を使用してください。
- uid: microsoft.quantum.canon.multiplexerbruteforcefromgenerator
  summary: >-
    N-qubit number 状態 $ \ket{j} $ によって制御されている場合に、$V j $ を適用する、乗算によって制御される $U $ を返します。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexerfromgenerator
  summary: >-
    N-qubit number 状態 $ \ket{j} $ によって制御されている場合に、$V j $ を適用する、乗算によって制御される $U $ を返します。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.nearequalityfact
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Diagnostics.NearEqualityFactD" を使用してください。
- uid: microsoft.quantum.canon.operationpow
  summary: >-
    操作を累乗します。


    つまり、ゲート $U $ を表す操作が指定されている場合は、power $m $ に対して ^ m $ $U 新しい操作を返します。
- uid: microsoft.quantum.canon.operationpowa
  summary: >-
    操作を累乗します。

    修飾子 `A` は、操作が adjointable であることを示します。


    つまり、ゲート $U $ を表す操作が指定されている場合は、power $m $ に対して ^ m $ $U 新しい操作を返します。
- uid: microsoft.quantum.canon.operationpowc
  summary: >-
    操作を累乗します。

    修飾子 `C` は、操作が制御可能であることを示します。


    つまり、ゲート $U $ を表す操作が指定されている場合は、power $m $ に対して ^ m $ $U 新しい操作を返します。
- uid: microsoft.quantum.canon.operationpowca
  summary: >-
    操作を累乗します。

    修飾子 `A` は、操作が制御可能であり、adjointable であることを示します。


    つまり、ゲート $U $ を表す操作が指定されている場合は、power $m $ に対して ^ m $ $U 新しい操作を返します。
- uid: microsoft.quantum.canon.pad
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Padded" を使用してください。
- uid: microsoft.quantum.canon.paulifrombitstring
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.boolarrayaspauli"を使用してください。
- uid: microsoft.quantum.canon.pnormalize
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.math.pnormalized"を使用してください。
- uid: microsoft.quantum.canon.positiveintfromboolarr
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.boolarrayasint"を使用してください。
- uid: microsoft.quantum.canon.positiveintfromresultarr
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.resultarrayasint"を使用してください。
- uid: microsoft.quantum.canon.restrictedtosubregister
  summary: 操作をレジスタのインデックスの配列 (サブレジスタ) に制限します。
- uid: microsoft.quantum.canon.restrictedtosubregistera
  summary: >-
    操作をレジスタのインデックスの配列 (サブレジスタ) に制限します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.restrictedtosubregisterc
  summary: >-
    操作をレジスタのインデックスの配列 (サブレジスタ) に制限します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.restrictedtosubregisterca
  summary: >-
    操作をレジスタのインデックスの配列 (サブレジスタ) に制限します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.restricttosubregister
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.restrictedtosubregister"を使用してください。
- uid: microsoft.quantum.canon.restricttosubregistera
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.restrictedtosubregistera"を使用してください。
- uid: microsoft.quantum.canon.restricttosubregisterc
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.restrictedtosubregisterc"を使用してください。
- uid: microsoft.quantum.canon.restricttosubregisterca
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.restrictedtosubregisterca"を使用してください。
- uid: microsoft.quantum.canon.resultarrfromboolarr
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.resultarrayasboolarray"を使用してください。
- uid: microsoft.quantum.canon.resultasint
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.resultarrayasint"を使用してください。
- uid: microsoft.quantum.canon.resultfrombool
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.boolasresult"を使用してください。
- uid: microsoft.quantum.canon.reverse
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Reversed" を使用してください。
- uid: microsoft.quantum.canon.snd
  summary: ペアが指定されると、はその2番目の要素を返します。
- uid: microsoft.quantum.canon.splitarray
  summary: >-
    > [!WARNING]

    > 非推奨です。代わりに @"Microsoft.Quantum.Arrays.Partitioned" を使用してください。
- uid: microsoft.quantum.canon.stackcapacity
  summary: <xref:microsoft.quantum.canon.resultstack>の容量を取得します。
- uid: microsoft.quantum.canon.stacklength
  summary: <xref:microsoft.quantum.canon.resultstack>に格納されている要素の数を取得します。
- uid: microsoft.quantum.canon.stacknew
  summary: 指定された容量で新しい空の <xref:microsoft.quantum.canon.resultstack> を作成します。
- uid: microsoft.quantum.canon.stackpeek
  summary: <xref:microsoft.quantum.canon.resultstack>の最上位の要素を取得します。
- uid: microsoft.quantum.canon.stackpop
  summary: <xref:microsoft.quantum.canon.resultstack>から最上位の要素を削除します。
- uid: microsoft.quantum.canon.stackpush
  summary: 新しい要素を <xref:microsoft.quantum.canon.resultstack>にプッシュします。
- uid: microsoft.quantum.canon.tooperation
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.convert.functionasoperation"を使用してください。
- uid: microsoft.quantum.canon.transformedoperation
  summary: 関数と操作が指定された場合、指定された関数によって入力が変換される新しい操作を返します。
- uid: microsoft.quantum.canon.transformedoperationa
  summary: 関数と操作が指定された場合、指定された関数によって入力が変換される新しい操作を返します。
- uid: microsoft.quantum.canon.transformedoperationc
  summary: 関数と操作が指定された場合、指定された関数によって入力が変換される新しい操作を返します。
- uid: microsoft.quantum.canon.transformedoperationca
  summary: 関数と操作が指定された場合、指定された関数によって入力が変換される新しい操作を返します。
- uid: microsoft.quantum.canon.uncurriedop
  summary: 操作を返す関数を指定した場合、は、両方の入力をタプルとして受け取る新しい操作を返します。
- uid: microsoft.quantum.canon.uncurriedopa
  summary: >-
    操作を返す関数を指定した場合、は、両方の入力をタプルとして受け取る新しい操作を返します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.uncurriedopc
  summary: >-
    操作を返す関数を指定した場合、は、両方の入力をタプルとして受け取る新しい操作を返します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.uncurriedopca
  summary: >-
    操作を返す関数を指定した場合、は、両方の入力をタプルとして受け取る新しい操作を返します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.uncurryop
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.uncurriedop"を使用してください。
- uid: microsoft.quantum.canon.uncurryopa
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.uncurriedopa"を使用してください。
- uid: microsoft.quantum.canon.uncurryopc
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.uncurriedopc"を使用してください。
- uid: microsoft.quantum.canon.uncurryopca
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.canon.uncurriedopca"を使用してください。
- uid: microsoft.quantum.canon.weightonepaulis
  summary: 指定された数の qubits に対するすべての重み-1 の Pan Li 演算子の配列を返します。
- uid: microsoft.quantum.canon.xor
  summary: これにより、2ビットの排他的 OR が計算されます。
operations:
- uid: microsoft.quantum.canon.adiabaticstateenergyunitary
  summary: >-
    > [!WARNING]

    > 非推奨 @"microsoft.quantum.simuilation.pnormalized"を使用してください。
- uid: microsoft.quantum.canon.andladder
  summary: >-
    ターゲット qubits に対して、制御された ' AND はしご ' を実行します。


    これにより、計算ベースのベクトルの次のマップで指定された周期が適用されます: $ $ \begin{align} \ket{x\_1, \ ドット, x\_n} \ket{y\_1, \ ドット, y\_{n-1}} \ map\ket{x\_1,、\ ドット, x\_n} \ket{y\_1 \ oplus (x\_1 \ 横 x\_2), \ ドット, y\_{n-1} \ oplus (x\_1 \ 陸 x\_2 \ \ ドット/陸 x\_{n-1}},、\end{align} $ $ where $ \ket{x\_1, \ ドット, x\_n} $ は `controls`の計算ベースの状態を表し、$ \ket{y\_1, \ ドット, y\_{n-1}} $ は `targets`の計算基盤の状態を示します。
- uid: microsoft.quantum.canon.applydiagonalunitary
  summary: >-
    複雑なフェーズの配列を、qubits のレジスタの数値ベースの状態に適用します。


    つまり、$-qubit number $ \ket{j} $ という $n に $e ^ {i > $ という複雑なフェーズを適用する、$ $U の斜線検索演算が実装されています。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} e ^ {k {j} \ bra {j} $ となります。
- uid: microsoft.quantum.canon.applyfermionicswap
  summary: Fermionic SWAP を適用します。
- uid: microsoft.quantum.canon.applyif
  summary: 従来のビットで条件付き操作を適用します。
- uid: microsoft.quantum.canon.applyifa
  summary: クラシックビットで条件付き adjointable 操作を適用します。
- uid: microsoft.quantum.canon.applyifc
  summary: クラシックビットで条件付きの制御可能な操作を適用します。
- uid: microsoft.quantum.canon.applyifca
  summary: 古典的なビットに対して条件付きのユニタリ操作を適用します。
- uid: microsoft.quantum.canon.applyifelseb
  summary: 従来のビットの値に応じて、2つの操作のいずれかを適用します。
- uid: microsoft.quantum.canon.applyifelseba
  summary: 従来のビットの値に応じて、2つの adjointable 操作のいずれかを適用します。
- uid: microsoft.quantum.canon.applyifelsebc
  summary: クラシックビットの値に応じて、制御可能な2つの操作のいずれか1つを適用します。
- uid: microsoft.quantum.canon.applyifelsebca
  summary: 従来のビットの値に応じて、2つのいずれかのユニタリ操作を適用します。
- uid: microsoft.quantum.canon.applyifelser
  summary: 古典的な結果の値に応じて、2つの操作のいずれかを適用します。
- uid: microsoft.quantum.canon.applyifelsera
  summary: 従来の結果の値に応じて、2つの adjointable 操作のいずれかを適用します。
- uid: microsoft.quantum.canon.applyifelserc
  summary: クラシック結果の値に応じて、制御可能な2つの操作のいずれかを適用します。
- uid: microsoft.quantum.canon.applyifelserca
  summary: 古典的な結果の値に応じて、2つのいずれかのユニタリ操作を適用します。
- uid: microsoft.quantum.canon.applyifone
  summary: 従来の結果値に対する条件付き操作を1として適用します。
- uid: microsoft.quantum.canon.applyifonea
  summary: 従来の結果値が1である adjointable 操作を適用します。
- uid: microsoft.quantum.canon.applyifonec
  summary: 古典的な結果値が1であるという制御可能な操作を適用します。
- uid: microsoft.quantum.canon.applyifoneca
  summary: 古典的な結果値が1であることを条件とする、一連の検索操作を適用します。
- uid: microsoft.quantum.canon.applyifzero
  summary: 従来の結果値に対する条件付き操作を0に適用します。
- uid: microsoft.quantum.canon.applyifzeroa
  summary: 従来の結果値が0である adjointable 操作を適用します。
- uid: microsoft.quantum.canon.applyifzeroc
  summary: 古典的な結果値が0である制御可能な操作を適用します。
- uid: microsoft.quantum.canon.applyifzeroca
  summary: 古典的な結果値に対して条件付きの、ゼロを指定した、ユニタリ操作を適用します。
- uid: microsoft.quantum.canon.applymulticontrolledc
  summary: >-
    1つの操作の制御された複数のバージョンを適用します。

    修飾子 `C` は、single qubit 演算が制御可能であることを示します。
- uid: microsoft.quantum.canon.applymulticontrolledca
  summary: >-
    1つの操作の制御された複数のバージョンを適用します。

    修飾子 `CA` は、single qubit 操作が制御可能で adjointable であることを示します。
- uid: microsoft.quantum.canon.applypauli
  summary: 指定された複数の演算子がある場合、対応する操作をレジスタに適用します。
- uid: microsoft.quantum.canon.applypaulifrombitstring
  summary: ブール値配列の対応するビットが指定された入力と一致する場合、配列内の各 qubit に対して P# li 演算子を適用します。
- uid: microsoft.quantum.canon.applyquantumfouriertransform
  summary: リトルエンディアン表現内の整数を含むクォンタムレジスタに対して、Quantum フーリエ変換を実行します。
- uid: microsoft.quantum.canon.applyquantumfouriertransformbe
  summary: >-
    > [!WARNING]

    > 非推奨この操作は削除されました。
- uid: microsoft.quantum.canon.applyquantumfouriertransformle
  summary: ''
- uid: microsoft.quantum.canon.applyreversedopbigendian
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBE"を使用してください。
- uid: microsoft.quantum.canon.applyreversedopbigendiana
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEA"を使用してください。
- uid: microsoft.quantum.canon.applyreversedopbigendianc
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEC"を使用してください。
- uid: microsoft.quantum.canon.applyreversedopbigendianca
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpBEC"を使用してください。
- uid: microsoft.quantum.canon.applyreversedoplittleendian
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLE"を使用してください。
- uid: microsoft.quantum.canon.applyreversedoplittleendiana
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEA"を使用してください。
- uid: microsoft.quantum.canon.applyreversedoplittleendianc
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEC"を使用してください。
- uid: microsoft.quantum.canon.applyreversedoplittleendianca
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ApplyReversedOpLEC"を使用してください。
- uid: microsoft.quantum.canon.applyripplecarrycomparatorbe
  summary: >-
    > [!WARNING]

    > 非推奨この操作は削除されました。
- uid: microsoft.quantum.canon.applyripplecarrycomparatorle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.CompareUsingRippleCarry"を使用してください。
- uid: microsoft.quantum.canon.applytoeach
  summary: レジスタ内の各要素に単一の qubit 演算を適用します。
- uid: microsoft.quantum.canon.applytoeacha
  summary: >-
    レジスタ内の各要素に単一の qubit 演算を適用します。

    修飾子 `A` は、single qubit 操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytoeachc
  summary: >-
    レジスタ内の各要素に単一の qubit 演算を適用します。

    修飾子 `C` は、single qubit 演算が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytoeachca
  summary: >-
    レジスタ内の各要素に単一の qubit 演算を適用します。

    修飾子 `CA` は、single qubit 操作が制御可能で adjointable であることを示します。
- uid: microsoft.quantum.canon.applytoeachindex
  summary: レジスタ内のインデックスが付けられた各要素に単一の qubit 演算を適用します。
- uid: microsoft.quantum.canon.applytoeachindexa
  summary: >-
    レジスタ内のインデックスが付けられた各要素に単一の qubit 演算を適用します。

    修飾子 `A` は、single qubit 操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytoeachindexc
  summary: >-
    レジスタ内のインデックスが付けられた各要素に単一の qubit 演算を適用します。

    修飾子 `C` は、single qubit 演算が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytoeachindexca
  summary: >-
    レジスタ内のインデックスが付けられた各要素に単一の qubit 演算を適用します。

    修飾子 `CA` は、single qubit 操作が adjointable で制御可能であることを示します。
- uid: microsoft.quantum.canon.applytofirstqubit
  summary: レジスタ内の最初の qubit に操作を適用します。
- uid: microsoft.quantum.canon.applytofirstqubita
  summary: >-
    レジスタ内の最初の qubit に操作を適用します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytofirstqubitc
  summary: >-
    レジスタ内の最初の qubit に操作 op を適用します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytofirstqubitca
  summary: >-
    レジスタ内の最初の qubit に操作 op を適用します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.applytofirstthreequbits
  summary: レジスタ内の最初の3つの qubits に操作を適用します。
- uid: microsoft.quantum.canon.applytofirstthreequbitsa
  summary: >-
    レジスタ内の最初の3つの qubits に操作を適用します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytofirstthreequbitsc
  summary: >-
    レジスタ内の最初の3つの qubits に操作を適用します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytofirstthreequbitsca
  summary: >-
    レジスタ内の最初の3つの qubits に操作を適用します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.applytofirsttwoqubits
  summary: レジスタ内の最初の2つの qubits に操作を適用します。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsa
  summary: >-
    レジスタ内の最初の2つの qubits に操作を適用します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsc
  summary: >-
    レジスタ内の最初の2つの qubits に操作を適用します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytofirsttwoqubitsca
  summary: >-
    レジスタ内の最初の2つの qubits に操作を適用します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.applytopartition
  summary: レジスタの特定のパーティションに2つの操作を適用して、2つの部分に分割します。
- uid: microsoft.quantum.canon.applytopartitiona
  summary: >-
    レジスタの特定のパーティションに2つの操作を適用して、2つの部分に分割します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytopartitionc
  summary: >-
    レジスタの特定のパーティションに2つの操作を適用して、2つの部分に分割します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytopartitionca
  summary: >-
    レジスタの特定のパーティションに2つの操作を適用して、2つの部分に分割します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.applytosubregister
  summary: インデックスの配列によって指定された qubits を使用して、レジスタのサブレジスタに操作を適用します。
- uid: microsoft.quantum.canon.applytosubregistera
  summary: >-
    インデックスの配列によって指定された qubits を使用して、レジスタのサブレジスタに操作を適用します。

    修飾子 `A` は、操作が adjointable であることを示します。
- uid: microsoft.quantum.canon.applytosubregisterc
  summary: >-
    インデックスの配列によって指定された qubits を使用して、レジスタのサブレジスタに操作を適用します。

    修飾子 `C` は、操作が制御可能であることを示します。
- uid: microsoft.quantum.canon.applytosubregisterca
  summary: >-
    インデックスの配列によって指定された qubits を使用して、レジスタのサブレジスタに操作を適用します。

    修飾子 `CA` は、操作が制御可能であり、adjointable であることを示します。
- uid: microsoft.quantum.canon.applywith
  summary: 2つの操作を指定した場合、1つは conjugated として適用されます。
- uid: microsoft.quantum.canon.applywitha
  summary: 2つの操作を指定した場合、1つは conjugated として適用されます。
- uid: microsoft.quantum.canon.applywithc
  summary: ''
- uid: microsoft.quantum.canon.applywithca
  summary: 2つの操作を指定した場合、1つは conjugated として適用されます。
- uid: microsoft.quantum.canon.applywithinputtransformation
  summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
- uid: microsoft.quantum.canon.applywithinputtransformationa
  summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
- uid: microsoft.quantum.canon.applywithinputtransformationc
  summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
- uid: microsoft.quantum.canon.applywithinputtransformationca
  summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
- uid: microsoft.quantum.canon.approximateqft
  summary: クォンタムレジスタにおおよそのクォンタムフーリエ変換 (アク FT) を適用します。
- uid: microsoft.quantum.canon.asserthighestbit
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.AssertMostSignificantBit"を使用してください。
- uid: microsoft.quantum.canon.assertlessthanphasele
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.AssertPhaseLessThan"を使用してください。
- uid: microsoft.quantum.canon.assertphase
  summary: >-
    等しい法則状態のフェーズに予期される値があることをアサートします。


    具体的には、任意の real t に対して $ \frac{e ^ {i t}} {\ sqrt{2}} (e ^{0} {k} \ k{1}) $ として表現されるクォンタムの状態のフェーズ $ \ phi $ が、予期される値を持つことをアサートします。
- uid: microsoft.quantum.canon.assertprobintbe
  summary: >-
    > [!WARNING]

    > 非推奨この操作は削除されました。
- uid: microsoft.quantum.canon.cnotchain
  summary: >-
    位置にある qubits の配列のパリティを計算します。


    $ \Ket{q_0} \ket{q_0/oplus q_1} \ket{q_0/oplus q_1/oplus q_2} \ cドット $ のパターンに従います。
- uid: microsoft.quantum.canon.cnotchaintarget
  summary: >-
    Qubits の配列のパリティをターゲットの qubits に計算します。


    配列の初期状態が $ \ket{q_0} \ket{q_1} \ cドット \ket{q_{\text{target}}} $ の場合、最終的な状態は $ \ket{q_0} \ket{q_1 \ oplus q_0} \ cドット \ket{q_{n-1} \ oplus \ cドット \ oplus q_0 {q_ {\ text{target} $ によって指定されます。
- uid: microsoft.quantum.canon.copymostsignificantbitle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.CopyMostSignificantBit"を使用してください。
- uid: microsoft.quantum.canon.cx
  summary: >-
    制御された X (CX) ゲートを qubits のペアに適用します。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \end{align},、$ $。行と列は、「クォンタムの概念ガイド」のように編成されています。
- uid: microsoft.quantum.canon.cy
  summary: >-
    コントロール-Y (CY) ゲートを qubits のペアに適用します。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 0 &-i \\\\ 0 & 0 & i & 0 \end{align},、$ $。行と列は、「クォンタムの概念ガイド」のように編成されています。
- uid: microsoft.quantum.canon.cz
  summary: >-
    CS-CZ ゲートを qubits のペアに適用します。


    $ $ \begin{align} 1 & 0 & 0 & 0 \\\\ 0 & 1 & 0 & 0 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 &-1 \end{align},、$ $。行と列は、「クォンタムの概念ガイド」のように編成されています。
- uid: microsoft.quantum.canon.delay
  summary: 指定された操作を遅延付きで適用します。
- uid: microsoft.quantum.canon.delaya
  summary: 指定された操作を遅延付きで適用します。
- uid: microsoft.quantum.canon.delayc
  summary: 指定された操作を遅延付きで適用します。
- uid: microsoft.quantum.canon.delayca
  summary: 指定された操作を遅延付きで適用します。
- uid: microsoft.quantum.canon.hy
  summary: >-
    Y ベースのアナログを、Z 軸と Y 軸をインターチェンジする Hadamard 変換に適用します。


    1つの qubit で Y Hadamard 変換 $H y = S H $ は次のようになります。


    \begin{align} H_Y \mathrel{: =} \ frac{1}{\ sqrt{2}} \begin{bmatrix} 1 & 1 \\\\ i &-i \end{bmatrix}.

    \end{align}
- uid: microsoft.quantum.canon.inplacexorbe
  summary: >-
    > [!WARNING]

    > 非推奨この操作は削除されました。
- uid: microsoft.quantum.canon.inplacexorle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Measurement.ApplyXorInPlace"を使用してください。
- uid: microsoft.quantum.canon.integerincrementle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.IncrementByInteger"を使用してください。
- uid: microsoft.quantum.canon.integerincrementphasele
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.IncrementPhaseByInteger"を使用してください。
- uid: microsoft.quantum.canon.iteratethroughcartesianpower
  summary: デカルト積 [0, bound-1] × [0, bound-1] × [0, bound-1] を使用して変数を反復処理し、デカルト積のすべての要素に対して op (arr) を呼び出します。
- uid: microsoft.quantum.canon.iteratethroughcartesianproduct
  summary: デカルト積 [0, bounds [0]-1] × [0, bounds [1]-1] × [0, bounds [Length (bounds)-1]-1] を使用して `arr`変数を反復処理し、デカルト積のすべての要素に対して op (arr) を呼び出します。
- uid: microsoft.quantum.canon.measureintegerbe
  summary: >-
    > [!WARNING]

    > 非推奨この操作は削除されました。
- uid: microsoft.quantum.canon.modularaddproductle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.MultiplyAndAddByModularInteger"を使用してください。
- uid: microsoft.quantum.canon.modularaddproductphasele
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.MultiplyAndAddPhaseByModularInteger"を使用してください。
- uid: microsoft.quantum.canon.modularincrementle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.ModularIncrementByInteger"を使用してください。
- uid: microsoft.quantum.canon.modularincrementphasele
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.IncrementPhaseByModularInteger"を使用してください。
- uid: microsoft.quantum.canon.modularmultiplybyconstantle
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Arithmetic.MultiplyByModularInteger"を使用してください。
- uid: microsoft.quantum.canon.multiplexoperations
  summary: >-
    数値の状態の配列によって制御される操作の配列を適用します。


    つまり、$n $ qubit number $ \ket{j} $ によって制御されている場合に、$V j $ という数値を適用する $U $ に適用されます。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexoperationsbruteforcefromgenerator
  summary: >-
    N-qubit number 状態 $ \ket{j} $ によって制御される場合に、$V j $ を適用する $U $ の乗算制御されたユニタリ演算を適用します。


    $U = \ sum ^ {N-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexoperationsfromgenerator
  summary: >-
    N-qubit number 状態 $ \ket{j} $ によって制御される場合に、$V j $ に対して、多重制御された $U $ に適用します。


    $U = \ sum ^ {N-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
- uid: microsoft.quantum.canon.multiplexpauli
  summary: >-
    Qubits の配列に条件付きの回転を適用します。


    これにより、$n $ qubit number $ \ket{j} $ によって制御されている場合に、single qubit p Li operator $P $ によって回転を実行する、乗算によって制御される $U $ に適用されます。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes e ^ {i P > $。
- uid: microsoft.quantum.canon.multiplexz
  summary: >-
    Qubits の配列で条件付きの Pan Li Z の回転条件を適用します。


    これにより、$n $ qubit number $ \ket{j} $ によって制御されている場合に、single qubit p Li operator $Z $ によって回転を実行する、乗算によって制御される $U $ に適用されます。


    $U = \ sum ^ {2 ^ n-1} _ {j = 0} \ket{j}\bra{j}\otimes e ^ {i Z > $。
- uid: microsoft.quantum.canon.noop
  summary: 引数に対して identity 操作 (no op) を実行します。
- uid: microsoft.quantum.canon.qft
  summary: ビッグエンディアン表現に整数を含むクォンタムレジスタに対して、Quantum フーリエ変換を実行します。
- uid: microsoft.quantum.canon.qftle
  summary: リトルエンディアン表現内の整数を含むクォンタムレジスタに対して、Quantum フーリエ変換を実行します。
- uid: microsoft.quantum.canon.rall0
  summary: >-
    フェーズシフト操作を実行します。


    $R = \ bold one-(1-e ^ {i \phi}) \ket{0\cdots 0} \bra{0\cdots 0} $。
- uid: microsoft.quantum.canon.rall1
  summary: >-
    フェーズシフト操作を実行します。


    $R = \ bold one-(1-e ^ {i \phi}) \ket{1\cdots 1} \bra{1\cdots 1} $。
- uid: microsoft.quantum.canon.swapreverseregister
  summary: スワップゲートを使用して、レジスタ内の qubits の順序を逆にします。
- uid: microsoft.quantum.canon.with
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Canon.ApplyWith"を使用してください。
- uid: microsoft.quantum.canon.witha
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Canon.ApplyWithA"を使用してください。
- uid: microsoft.quantum.canon.withc
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Canon.ApplyWithC"を使用してください。
- uid: microsoft.quantum.canon.withca
  summary: >-
    > [!WARNING]

    > 非推奨 @"Microsoft.Quantum.Canon.ApplyWithCA"を使用してください。
newtypes:
- uid: microsoft.quantum.canon.ccnotop
  summary: CCNOT gate の署名の種類。
- uid: microsoft.quantum.canon.resultstack
  summary: >-
    `Result` 変数の後入れ先出しスタック。

    スタックは、整数の容量、スタックポインター、および `Result` 配列で構成されます。
ms.openlocfilehash: 8767d438adcecd7ccbd539d7c123ac42cfb8c295
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/30/2019
ms.locfileid: "73065165"
