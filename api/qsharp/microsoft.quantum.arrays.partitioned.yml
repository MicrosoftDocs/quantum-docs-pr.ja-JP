### YamlMime:QSharpType
uid: microsoft.quantum.arrays.partitioned
name: Partitioned
type: function
namespace: microsoft.quantum.arrays
summary: 配列を複数の部分に分割します。
examples: >-
  ```qsharp

  // The following returns [[1, 5], [3], [7]];

  let split = Partitioned([2,1], [1,5,3,7]);

  ```
syntax: "function Partitioned (nElements : Int[], arr : 'T[]) : 'T[][]"
input:
  content: "(nElements : Int[], arr : 'T[])"
  types:
  - name: nElements
    summary: 配列の各部分に含まれる要素の数
    isArray: true
    isPrimitive: true
    uid: Int
  - name: arr
    summary: 分割する入力配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[][]"
  types:
  - summary: 1番目の配列がの最初の配列で、 `nElements[0]` `arr` 2 番目の配列が次の配列である場合は、複数 `nElements[1]` の配列 `arr` 。最後の配列には、残りのすべての要素が含まれます。
    isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
metadata:
  ms.openlocfilehash: e09a6ec103699f88b1a4ed04b5b76ee11cb70934
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91474875"
