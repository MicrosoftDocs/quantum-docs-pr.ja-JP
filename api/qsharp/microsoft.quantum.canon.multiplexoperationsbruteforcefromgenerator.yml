### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexoperationsbruteforcefromgenerator
name: MultiplexOperationsBruteForceFromGenerator
type: operation
namespace: Microsoft.Quantum.Canon
summary: >-
  N-qubit number 状態 $ \ket{j} $ によって制御される場合に、$V j $ を適用する $U $ の乗算制御されたユニタリ演算を適用します。


  $U = \ sum ^ {N-1} _ {j = 0} \ket{j}\bra{j}\otimes V_j $。
remarks: $ 2 ^ n $ 未満の値が指定されている場合、`coefficients` には id 要素が埋め込まれます。 このバージョンは、n の制御されたユニタリ演算子によって直接実装されます。
syntax: "operation MultiplexOperationsBruteForceFromGenerator (unitaryGenerator : (Int, (Int -> ('T => Unit is Adj + Ctl))), index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T) : Unit"
input:
  content: "(unitaryGenerator : (Int, (Int -> ('T => Unit is Adj + Ctl))), index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T)"
  types:
  - name: unitaryGenerator
    summary: 1番目の要素 `Int` が $ $N $ にあり、2番目の要素が $ [0, N-1] $ の $ $j 整数を取得 $V して、`(Int -> ('T => () is Adj + Ctl))` のを含む関数であるタプル。
    types:
    - isPrimitive: true
      uid: Int
    - isFunction: true
      input:
        types:
        - isPrimitive: true
          uid: Int
      output:
        types:
        - isOperation: true
          input:
            types:
            - uid: "'T"
              isLocal: true
          output:
            types:
            - isPrimitive: true
              uid: Unit
          functors:
          - Adjoint
          - Controlled
  - name: index
    summary: 数値の状態をリトルエンディアン形式でエンコードする $-qubit コントロールレジスタ $n ます。
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: $V j $ が動作する汎用 qubit レジスタ。
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
ms.openlocfilehash: a010fc41e76c09f064fdb7a0fa890efcfd8a41f8
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73225164"
