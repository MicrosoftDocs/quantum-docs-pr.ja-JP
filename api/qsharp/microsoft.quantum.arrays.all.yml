### YamlMime:QSharpType
uid: microsoft.quantum.arrays.all
name: All
type: function
namespace: Microsoft.Quantum.Arrays
summary: 配列と、配列の要素に対して定義されている述語が指定されている場合、配列のすべての要素が述語を満たすかどうかを確認します。
remarks: "関数は、ジェネリック型に対して定義されます。つまり、配列 `'T[]` と関数 `predicate: 'T -> Bool` は、すべての要素が `predicate`を満たすかどうかを示す `Bool` 値を生成できます。"
examples: >-
  次のコードでは、配列のすべての要素が0以外であるかどうかを確認します。


  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function AllDemo() : Unit {
      let predicate = NotEqualI(_, 0);
      let isNonZero = All(predicate, [2, 3, 4, 5, 6, 0]);
      Message($"{isNonZero}");
  }

  ```
syntax: "function All (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: 要素のチェックに使用される `Bool` に `'T` の関数。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: "`'T`上の要素の配列。"
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: すべての要素に適用される述語のおよび関数の `Bool` 値。
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: '`array` 要素の型。'
metadata:
  ms.openlocfilehash: bc21229d0468adcd41f6c460f5325cad9f09ba5c
  ms.sourcegitcommit: a0e50c5f07841b99204c068cf5b5ec8ed087ffea
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 03/26/2020
  ms.locfileid: "80320783"
