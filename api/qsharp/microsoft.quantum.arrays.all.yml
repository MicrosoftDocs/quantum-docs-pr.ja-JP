### YamlMime:QSharpType
uid: microsoft.quantum.arrays.all
name: All
type: function
namespace: microsoft.quantum.arrays
summary: 配列と、配列の要素に対して定義されている述語が指定されている場合、配列のすべての要素が述語を満たすかどうかを確認します。
remarks: "関数は、ジェネリック型に対して定義されます。つまり、配列と関数がある場合は常に、 `'T[]` `predicate: 'T -> Bool` すべての要素が `Bool` 満たされるかどうかを示す値を生成でき `predicate` ます。"
examples: >-
  次のコードでは、配列のすべての要素が0以外であるかどうかを確認します。


  ```qsharp

  open Microsoft.Quantum.Arrays;

  open Microsoft.Quantum.Logical;


  function AllDemo() : Unit {
      let predicate = NotEqualI(_, 0);
      let isNonZero = All(predicate, [2, 3, 4, 5, 6, 0]);
      Message($"{isNonZero}");
  }

  ```
syntax: "function All (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: "`'T` `Bool` 要素のチェックに使用されるからへの関数。"
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: 上の要素の配列 `'T` 。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: '`Bool`すべての要素に適用される述語の関数と関数の値。'
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: 要素の型 `array` 。
metadata:
  ms.openlocfilehash: 6818b5adabdf8ed1fb2311d37bcffc0537fbbe67
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91475912"
