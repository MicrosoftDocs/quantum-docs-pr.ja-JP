### YamlMime:QSharpType
uid: microsoft.quantum.simulation.estimateenergywithadiabaticevolution
name: EstimateEnergyWithAdiabaticEvolution
type: operation
namespace: Microsoft.Quantum.Simulation
summary: は、自動的に割り当てられた入力状態に `statePrepUnitary` を適用することによって状態の準備を実行した後、`adiabaticUnitary`を使用した adiabatic 状態の準備を行い、最後のフェーズ推定を `phaseEstAlgorithm`を使用して結果の状態に `qpeUnitary`します。
syntax: 'operation EstimateEnergyWithAdiabaticEvolution (nQubits : Int, statePrepUnitary : (Qubit[] => Unit), adiabaticUnitary : (Qubit[] => Unit), qpeUnitary : (Qubit[] => Unit is Adj + Ctl), phaseEstAlgorithm : ((Microsoft.Quantum.Oracles.DiscreteOracle, Qubit[]) => Double)) : Double'
input:
  content: '(nQubits : Int, statePrepUnitary : (Qubit[] => Unit), adiabaticUnitary : (Qubit[] => Unit), qpeUnitary : (Qubit[] => Unit is Adj + Ctl), phaseEstAlgorithm : ((Microsoft.Quantum.Oracles.DiscreteOracle, Qubit[]) => Double))'
  types:
  - name: nQubits
    summary: シミュレーションに使用される qubits の数。
    isPrimitive: true
    uid: Int
  - name: statePrepUnitary
    summary: 初期 dynamical ジェネレーターの状態の準備を表す oracle。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: adiabaticUnitary
    summary: アルゴリズムの最終状態にスイープを実装するために使用される adiabatic 進化アルゴリズムを表す oracle。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: qpeUnitary
    summary: この oracle では、dynamical ジェネレーターでの時間 $ \ket{\phi} $ およびグラウンドステートエネルギー $E = \ phi\\, \ delta t $ を使用して、時間 $ \ デルタ t $ の進化を表す $ $U します。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: phaseEstAlgorithm
    summary: >-
      特定のユニタリ操作に対してフェーズ推定を実行する操作。

      詳細については、「[反復フェーズの推定](/quantum/libraries/characterization#iterative-phase-estimation)」を参照してください。
    isOperation: true
    input:
      types:
      - uid: microsoft.quantum.oracles.discreteoracle
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Double
output:
  content: Double
  types:
  - summary: $U $ によって表されるジェネレーターの地表状態エネルギー $ \ phi $ の推定 $ \hat{\phi} $。
    isPrimitive: true
    uid: Double
metadata:
  ms.openlocfilehash: a5c97bb34307c5216720f82c5cf91ca21cf90739
  ms.sourcegitcommit: edcf15044d7bdf4f8b21fb8f6af4bde475eb13a0
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 11/05/2019
  ms.locfileid: "73223294"
