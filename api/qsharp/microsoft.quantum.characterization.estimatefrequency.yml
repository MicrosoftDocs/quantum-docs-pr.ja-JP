### YamlMime:QSharpType
uid: microsoft.quantum.characterization.estimatefrequency
name: EstimateFrequency
type: operation
namespace: Microsoft.Quantum.Characterization
summary: 準備と測定値を指定した場合は、指定された数の試行回数を実行することで、測定が成功する頻度を推定します (`Zero`を返します)。
syntax: 'operation EstimateFrequency (preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int) : Double'
input:
  content: '(preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int)'
  types:
  - name: preparation
    summary: 入力レジスタに特定の状態 $ \rho $ を準備する、$ $P の操作。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: measurement
    summary: 対象の測定値を表す $ $M 演算。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Result
  - name: nQubits
    summary: 準備と測定がそれぞれ作用する qubits の数。
    isPrimitive: true
    uid: Int
  - name: nMeasurements
    summary: 対象の頻度を推定するために測定を実行する回数。
    isPrimitive: true
    uid: Int
output:
  content: Double
  types:
  - summary: >-
      $M (P (\ket{00/cドット 0} \bra{00/cドット 0})) $ が `Zero`返された推定 $ \hat{p} $ は、バイアスをかける二項分出し $ \hat{p} = n\_{\uparrow}/n\_{\text{measurements}} $ を使用して取得したものであり、$n\_{\uparrow} $ は、観測される `Zero` の結果の数です。


      これは、物理的な制限を尊重するターゲットコンピューターでは特に重要であり、確率を測定できないようにします。
    isPrimitive: true
    uid: Double
ms.openlocfilehash: 1c27d38983f9fa9c1a1dc5c80548e307b7c36ffe
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73229193"
