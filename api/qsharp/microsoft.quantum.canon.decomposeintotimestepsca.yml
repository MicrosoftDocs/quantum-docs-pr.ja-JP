### YamlMime:QSharpType
uid: microsoft.quantum.canon.decomposeintotimestepsca
name: DecomposeIntoTimeStepsCA
type: function
namespace: Microsoft.Quantum.Canon
summary: 指定された操作に対して Trotter – Suzuki インテグレーターを実装する操作を返します。
syntax: "function DecomposeIntoTimeStepsCA ((nSteps : Int, op : ((Int, Double, 'T) => Unit is Adj + Ctl)), trotterOrder : Int) : ((Double, 'T) => Unit is Adj + Ctl)"
references: >-
  の実装を使用します。


  - [*Berry、G. Ahokas、Cleve、サンダース、のよう*になります。](https://arxiv.org/abs/quant-ph/0508139)
input:
  content: "((nSteps : Int, op : ((Int, Double, 'T) => Unit is Adj + Ctl)), trotterOrder : Int)"
  types:
  - name: nSteps
    isPrimitive: true
    uid: Int
  - name: op
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Int
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: trotterOrder
    summary: >-
      使用する Trotter – Suzuki インテグレーターの順序を選択します。

      注文1と注文2、4、6,...は現在サポートされています。
    isPrimitive: true
    uid: Int
output:
  content: ((Double, 'T) => Unit is Adj + Ctl)
  types:
  - summary: Trotter – Suzuki インテグレーターを実装するユニタリを返します。最初のパラメーター `Double` は統合ステップサイズで、2番目のパラメーターは操作対象のターゲットです。
    isOperation: true
    input:
      types:
      - isPrimitive: true
        uid: Double
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
typeParameters:
- uid: "'T"
  summary: 各時間ステップが動作する型。通常は、`Qubit[]` または `Qubit`ます。
metadata:
  ms.openlocfilehash: ac9e4b4359c77205b7a823c334222a049ff49c10
  ms.sourcegitcommit: 27c9bf1aae923527aa5adeaee073cb27d35c0ca1
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 12/05/2019
  ms.locfileid: "74863966"
