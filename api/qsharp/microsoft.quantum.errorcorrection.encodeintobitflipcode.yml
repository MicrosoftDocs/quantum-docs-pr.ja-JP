### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.encodeintobitflipcode
name: EncodeIntoBitFlipCode
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: '[3, 1, 3]/⟦ 3, 1, 1 ⟧ビットフリップコードにエンコードされます。'
syntax: 'operation EncodeIntoBitFlipCode (physRegister : Qubit[], auxQubits : Qubit[]) : Microsoft.Quantum.ErrorCorrection.LogicalRegister'
input:
  content: '(physRegister : Qubit[], auxQubits : Qubit[])'
  types:
  - name: physRegister
    summary: 保護されるデータを表す物理 qubits のレジスタ。
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: auxQubits
    summary: 保護されるデータのエンコードに使用される、{00}$ \ket $ 状態の最初の補助 qubits のレジスタ。
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Microsoft.Quantum.ErrorCorrection.LogicalRegister
  types:
  - summary: エンコーディングで使用される物理および補助 qubits。論理レジスタとして表されます。
    uid: microsoft.quantum.errorcorrection.logicalregister
seeAlso:
- logicalregister
metadata:
  ms.openlocfilehash: 7a902bc056b9eb39bf12125a1078329f56712ac9
  ms.sourcegitcommit: db23885adb7ff76cbf8bd1160d401a4f0471e549
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 05/01/2020
  ms.locfileid: "82685006"
