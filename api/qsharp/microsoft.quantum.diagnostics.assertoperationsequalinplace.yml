### YamlMime:QSharpType
uid: microsoft.quantum.diagnostics.assertoperationsequalinplace
name: AssertOperationsEqualInPlace
type: operation
namespace: Microsoft.Quantum.Diagnostics
summary: >-
  2つの操作を指定すると、すべての入力状態で同じ動作をするようにアサートされます。


  このアサーションは、フォームのすべての状態に対して操作のアクションをチェックすることによって実装されます $V (& o)... \ otimes V_ {n-1} $。ここで $V k $ は、州 $ \ket{0}$、$ \ket{1}$、$ \ket{+} $、$ \ket{i} $ (+ 1 eigenstate of p Li Y operator) のいずれかです。


  このアサーションは $n $ qubits を使用し、比較対象の操作の複数の呼び出しを必要とします。
syntax: 'operation AssertOperationsEqualInPlace (nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj)) : Unit'
references: 州 $ \ket{0}$、$ \ket{1}$、$ \ket{+} $、$ \ket{i} $ の基礎は、語[ *、m.* ](https://arxiv.org/abs/quant-ph/9610001).....................
input:
  content: '(nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: 操作 `givenU` と `expectedU` が動作する、qubits $n $ の数。
    isPrimitive: true
    uid: Int
  - name: givenU
    summary: $N $ qubits の操作を確認します。
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: expectedU
    summary: '`givenU` を比較する $n $ qubits の参照操作です。'
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- assertoperationsequalreferenced
ms.openlocfilehash: a6c58f51bbc30f3917457d4137afb083533519fe
ms.sourcegitcommit: 8becfb03eb60ba205c670a634ff4daa8071bcd06
ms.translationtype: MT
ms.contentlocale: ja-JP
ms.lasthandoff: 10/31/2019
ms.locfileid: "73225759"
