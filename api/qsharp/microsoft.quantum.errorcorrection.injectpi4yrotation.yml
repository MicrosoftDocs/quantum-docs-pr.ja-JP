### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.injectpi4yrotation
name: InjectPi4YRotation
type: operation
namespace: microsoft.quantum.errorcorrection
summary: >-
  Y 軸について1つの qubit をπ/4 で回転します。


  に対してπ/4 回転を実行 `Y` します。


  回転はマジック状態を使用して実行されます。つまり、$ $ \begin{align} \cos\frac{\pi} {8} \ket {0} + \ sin \frac{\pi} \ket という状態のコピー {8} です {1} 。

  \end{align} $ $
remarks: >-
  同等のものを次に示します。


  ```qsharp

  Ry(PI() / 4.0, data);

  ```


  および


  ```qsharp

  using (magic = Qubit()) {
      Ry(PI() / 4.0, magic);
      InjectPi4YRotation(data, magic);
      Reset(magic);
  }

  ```


  この操作では、ファンクタがサポートされます。この `Adjoint` 場合、同じマジック状態が使用されますが、データ qubit への影響は $-\ pi/4 $ $Y $-ローテーションです。
syntax: 'operation InjectPi4YRotation (data : Qubit, magic : Qubit) : Unit'
input:
  content: '(data : Qubit, magic : Qubit)'
  types:
  - name: data
    summary: $Y $ ($ \ pi/$4) について回転する qubit。
    isPrimitive: true
    uid: Qubit
  - name: magic
    summary: マジック状態の最初の qubit。 この操作の次のアプリケーション `magic` は、$ \ket {0} $ 状態に戻ります。
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
metadata:
  ms.openlocfilehash: de0f44f1e388e45207a7f2b386d67f235c9950c2
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91484259"
