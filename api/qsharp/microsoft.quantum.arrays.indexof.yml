### YamlMime:QSharpType
uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: microsoft.quantum.arrays
summary: 指定された述語を満たす配列内の最初の要素の最初のインデックスを返します。 そのような要素が存在しない場合は、-1 を返します。
examples: >-
  は、 `IsEven : Int -> Bool` 入力が偶数の場合にのみを返す関数であるとし `true` ます。 次に、これをと共に使用して、 `IndexOf` 配列内の最初の偶数の要素を検索できます。


  ```Q#

  let items = [1, 3, 17, 2, 21];

  let idx = IndexOf(IsEven, items); // returns 3

  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: 配列の要素に対して動作する述語関数。
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: 指定された述語を使用して検索される配列。
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: '`idx`が true であるような最小のインデックス `predicate(arr[idx])` 。そのような要素が存在しない場合は-1。'
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 6b0097c4feb41a00f0d9c1fcb4c2b5dbcaa186ef
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89352123"
