### YamlMime:QSharpType
uid: microsoft.quantum.canon.applywithinputtransformation
name: ApplyWithInputTransformation
type: operation
namespace: microsoft.quantum.canon
summary: 入力を受け入れる操作、その操作と互換性のある出力を返す関数、およびその関数への入力を指定すると、関数を使用して操作が適用され、操作によって予期される形式に入力が変換されます。
examples: >-
  次の呼び出しでは、を使用し @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" て、型の入力に対する入力用に設計された操作を適用し @"Microsoft.Quantum.Arithmetic.BigEndian" @"Microsoft.Quantum.Arithmetic.LittleEndian" ます。


  ```qsharp

  ApplyWithInputTransformation(LittleEndianAsBigEndian, ApplyXorInPlaceBE, LittleEndian(qubits));

  ```
syntax: "operation ApplyWithInputTransformation (fn : ('U -> 'T), op : ('T => Unit), input : 'U) : Unit"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit), input : 'U)"
  types:
  - name: fn
    summary: 指定された入力を操作によって予期される形式に変換する関数。
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: 適用する操作。
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: input
    summary: 関数への入力。
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- applywithinputtransformationa
- applywithinputtransformationc
- applywithinputtransformationca
- transformedoperation
metadata:
  ms.openlocfilehash: 9419b9002b973dd37223caca84c69b0e3a6c19d3
  ms.sourcegitcommit: 685a8ab16d7e6a25e63a168d6e7c385fa6e876cc
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/29/2020
  ms.locfileid: "91467565"
