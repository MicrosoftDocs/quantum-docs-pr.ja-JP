### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusi
name: ModulusI
type: function
namespace: microsoft.quantum.math
summary: 剰余の正規の residue を計算 `value` `modulus` します。
remarks: 'この関数は、演算子が `%` C# および Q # で動作する方法とは異なり、 `modulus - 1` 値が負の場合でも、結果は常に 0 ~ の正の整数になります。'
syntax: 'function ModulusI (value : Int, modulus : Int) : Int'
input:
  content: '(value : Int, modulus : Int)'
  types:
  - name: value
    summary: Residue が計算される値
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Residues の取得に使用する剰余。正の整数である必要があります
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - summary: 0から、 `modulus - 1` `value - r` 剰余で割り切れた整数 $r $
    isPrimitive: true
    uid: Int
metadata:
  ms.openlocfilehash: 63d8e1ed1083be193b976ea7c4086f7bfdad7a69
  ms.sourcegitcommit: d6ac6f4345be0dd68f1bcd944f44b08e7a3cf346
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 09/02/2020
  ms.locfileid: "89334052"
